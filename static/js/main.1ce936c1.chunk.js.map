{"version":3,"sources":["kageUtils/glyph.ts","args.ts","actions/drag.ts","actions/select.ts","reducers/select.ts","kageUtils/freehand.ts","kageUtils/reflectrotate.ts","kageUtils/connection.ts","kageUtils/transform.ts","actions/editor.ts","callapi.ts","kage.ts","kageUtils/bbx.ts","selectors/draggedGlyph.ts","reducers/drag.ts","kageUtils/stretchparam.ts","kageUtils/decompose.ts","kageUtils/stroketype.ts","components/OptionModal.tsx","reducers/editor.ts","actions/display.ts","reducers/display.ts","actions/undo.ts","reducers/index.ts","reducers/undo.ts","store.ts","xorMask.ts","kageUtils/match.ts","components/XorMasks.tsx","components/Grid.tsx","components/Stroke.tsx","components/Glyph.tsx","components/StrokeCenterLine.tsx","components/ControlPoint.tsx","components/SelectionControl.tsx","components/AreaSelectRect.tsx","components/GlyphArea.tsx","components/SelectionInfo.tsx","selectors/submitGlyph.ts","components/SubmitPreview.tsx","components/EditorControls.tsx","components/PartsList.tsx","components/PartsSearch.tsx","components/SubmitForm.tsx","App.tsx","shortcuts.ts","reportWebVitals.ts","i18n.ts","index.tsx"],"names":["getNumColumns","strokeType","unparseGlyphLine","glyphLine","values","value","map","num","Math","round","partName","join","parseGlyph","glyphStr","split","line","glyphLineStr","splitLine","numColumns","i","push","floor","parseGlyphLine","filter","gLine","length","unparseGlyph","glyph","args","URLSearchParams","window","location","hash","slice","host","get","ssl","name","related","edittime","data","summary","gwHosts","document","referrer","referrerUrl","URL","includes","protocol","e","RectPointPosition","sanitizedArgs","actionCreator","actionCreatorFactory","selectActions","selectSingle","selectAddSingle","selectRemoveSingle","selectNone","selectAll","selectDeselected","selectPrev","selectNext","updateBuilder","builder","case","state","index","selection","concat","index2","_gLine","firstSelected","min","max","snapped","ReflectRotateType","dragActions","startBackgroundDrag","startSelectionDrag","startPointDrag","startResize","mouseMove","mouseUp","updateCTMInv","connectablePairs","position","strokeTypes","shapeTypes","matchConnectablePoint","point","shapeType","getConnectablePoints","result","coord","pointIndex","endPointIndex","listupConnectedPoints","memoizeOne","points","sPoints","lineIndex","sPoint","forEach","dPoint","some","point2","point1","filter1","filter2","glyph1","points1","glyph2","points2","every","listupConnectedPointsOfSelection","selectedDescs","applyGlyphLineOperation","tX","tY","applyGlyphPointOperation","pdescs","newGlyph","newValue","moveSelectedGlyphLines","dx","dy","targetDescs","x","y","moveSelectedPoint","selectedDesc","targetDesc","resizeSelectedGlyphLines","oldBBX","newBBX","x11","y11","x12","y12","x21","y21","x22","y22","resizeGlyphLine","avg","nums","reduce","a","b","sum","lerp","x1","x2","k","norm2","drawFreehand","startX","startY","endX","endY","lastStroke","newLastStroke","centroidX","centroidY","midX","midY","dis","sqrt","abs","correctStroke","mid1X","mid1Y","mid2X","mid2Y","startType","endType","ev","undefined","minVal","Infinity","datum","val","minBy","leftBottomX","leftBottomY","dx1","dy1","dx2","dy2","cosAngle","newStroke","snapStrokeStart","snapStrokeEnd","snapStrokeTilt","snapToNewStroke","setGlyphValue","column","newGLine","snapVerticalStroke","vertStroke","leftType","middleType","rightType","ti","xi","yi","nx","ny","minX","maxX","minY","maxY","horiStroke","y1","y2","snapHorizontalStroke","midStartShape","rightStartShape","snapStrokeSegmentTilt","point1Index","x1i","y1i","x2i","y2i","sx1","sy1","sx2","sy2","editorActions","loadedBuhin","loadedStretchParam","changeStrokeType","changeHeadShapeType","changeTailShapeType","changeStretchCoeff","changeReflectRotateOpType","swapWithPrev","swapWithNext","insertPart","paste","copy","cut","delete","decomposeSelected","moveSelected","toggleFreehand","escape","finishEdit","callApi","path","fetch","response","ok","Error","text","getSource","encodeURIComponent","search","query","kage_","Kage","getKage","buhinMap","fallback","shotai","kBuhin","kShotai","waiting","Set","loadAbsentBuhin","has","add","then","source","stretchMatch","exec","params","store","dispatch","catch","err","console","error","filteredGlyphIsEqual","gLine1","makeGlyphSeparated_","makeGlyphSeparated","map1","shotai1","map2","shotai2","makeGlyphSeparatedFactory","isEqual","makeGlyphSeparatedForSubmit","bbxOfPoints","xs","ys","getGlyphLineBBX","mergeBBX","getGlyphLinesBBX","glyphLines","gLines1","gLines2","resizeSelected","selectedGlyphLine","north","west","south","east","southeast","southwest","northeast","northwest","newGlyphLine","minSize","draggedGlyphSelector","createSelector","dragSelection","dragPoint","resizeSelection","freehandStroke","evt","ctmInv","clientX","clientY","freehandMode","areaSelectRect","lastX","lastY","splice","intersections","polygonsSep","gAreaPolygon","array","polygon","gPolygon","polygonInPolygon","polygonIntersectsPolygon","performAreaSelect","newSelection","Array","from","getStretchPositions","setStretchPositions","positions","sx","sy","tx","ty","normalizeStretchPositions","calcStretchScalar","param","x0","y0","decomposeDeepGlyph","getEachStrokes","stroke","columns","a1","a2_100","kirikuchiAdjustment","tateAdjustment","a3_100","opt3","mageAdjustment","x3","y3","x4","y4","decomposeDeep","headShapeTypes","1","2","3","4","6","7","tailShapeTypes","validStrokeShapeTypes","isValidStrokeShapeTypes","s0","s1","s2","showCenterLine","reflectRotateTypes","reflectX","reflectY","rotate90","rotate180","rotate270","reflectRotateTypeParamsMap","setGlyphLine","newMap","Map","set","stretchParamMap","newType","oldType","oldNumPoints","newNumPoints","xm","ym","xm1","ym1","xm2","ym2","selectedLine","stretchParam","calcStretchPositions","opType","clipboard","targetLines","newLines","buhinSource","failedBuhin","kage","strokesArray","box","getBox","isStretchEnabled","oldGlyphLine","stretchedX","stretch","stretchedY","tx2","ty2","px1","py1","px2","py2","revX","revY","decompose","subindex","showOptionModal","exitEvent","displayActions","openOptionModal","closeOptionModal","setGridDisplay","setGridOriginX","setGridOriginY","setGridSpacingX","setGridSpacingY","setShotai","setStrokeCenterLineDisplay","setXorMaskType","grid","display","originX","originY","spacingX","spacingY","showStrokeCenterLine","xorMaskType","undoActions","undo","redo","initialState","undoStacks","reducer","type","reducerWithInitialState","default","oldState","action","newState","glyphLine1","glyphLine2","value1","pushUndo","undoable","withHandling","select","drag","editor","createStore","xorMaskShapeMap","none","circle","squareWithRoundedCorners","square","diamond","xorMaskTypes","Object","keys","ReactModal","setAppElement","OptionModal","MatchType","useSelector","useDispatch","handleRequestClose","useCallback","handleGridDisplayChange","currentTarget","checked","handleGridOriginXChange","valueAsNumber","handleGridOriginYChange","handleGridSpacingXChange","handleGridSpacingYChange","handleShotaiChange","handleStrokeCenterLineChange","handleXorMaskTypeChange","useTranslation","t","i18n","handleLanguageChange","changeLanguage","isOpen","onRequestClose","shouldCloseOnEsc","className","onChange","disabled","maskType","language","onClick","XorMasks","id","d","Grid","StrokeComponent","props","polygons","GlyphComponent","nonSelection","_polygons","onMouseDown","handleMouseDownDeselectedStroke","Stroke","xlinkHref","clipPath","handleMouseDownSelectedStroke","StrokeCenterLine","strokes","v","getMatchType","isOnline","match","online","ControlPoint","width","height","handleMouseDown","selectionControlSelector","rectControl","pointControl","auxiliaryLines","centerLine","selectedStrokes","multiSelect","coords","selectedStroke","matchType","SelectionControl","handleMouseDownRectControl","stopPropagation","handleMouseDownNorthPoint","handleMouseDownWestPoint","handleMouseDownSouthPoint","handleMouseDownEastPoint","handleMouseDownSoutheastPoint","handleMouseDownSouthwestPoint","handleMouseDownNortheastPoint","handleMouseDownNorthwestPoint","handleMouseDownPointControls","useMemo","_control","controlPointNorth","controlPointSouth","controlPointWest","controlPointEast","AreaSelectRect","rect","temp","GlyphArea","svgClassName","handleMouseDownCapture","ctm","getScreenCTM","pt","createSVGPoint","ictm","inverse","evtx","evty","matrixTransform","handleMouseDownBackground","shiftKey","ctrlKey","preventDefault","useEffect","handleMouseMove","handleMouseUp","addEventListener","removeEventListener","viewBox","onContextMenu","onMouseDownCapture","always","selectedGlyphLineSelector","draggedGlyph","strokeInfoSelector","headShapeType","tailShapeType","validTypes","coordString","partInfoSelector","entityName","aliasMatch","stretchCoeff","reflectRotateInfoSelector","find","param1","param2","otherInfoSelector","selectedStroke_","isMultiple","selectIndexStringSelector","glyphLength","selectedIndexString","sort","buttonsDisabledSelector","swapPrevDisabled","swapNextDisabled","selectPrevDisabled","selectNextDisabled","SelectionInfo","strokeInfo","partInfo","reflectRotateInfo","otherInfo","selectIndexString","shallowEqual","entity","submitGlyphSelector","SubmitPreview","submitGlyph","EditorControls","undoDisabled","redoDisabled","pasteDisabled","decomposeDisabled","options","nativeEvent","getImageURL","PartsList","handleItemClick","handleItemMouseEnter","handleItemMouseLeave","handleImageClick","dataset","handleImageMouseEnter","handleImageMouseLeave","names","alt","title","data-name","src","loading","onMouseEnter","onMouseLeave","searchSuggestions","initialQuery","QueryTooShortError","initialSearchState","PartsSearch","queryInputRef","useRef","useState","searchState","setSearchState","startSearch","reason","newSearchState","currentSearchState","handleSearch","current","handleFormSubmit","hoverNameRef","textContent","onSubmit","defaultValue","list","ref","suggestion","message","glyphName","formAction","formStyle","visibility","SubmitForm","formRef","submit","style","method","App","useHotkeys","useShortcuts","lang","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","resources","translation","lng","use","initReactI18next","init","fallbackLng","returnObjects","interpolation","escapeValue","ReactDOM","render","StrictMode","getElementById"],"mappings":"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AAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IACP,CAAC,EAAG,EAAG,IACP,CAAC,EAAG,EAAG,IACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,KACP,CAAC,EAAG,EAAG,KACP,CAAC,EAAG,EAAG,IACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,GAAI,KACR,CAAC,EAAG,GAAI,KACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,KACR,CAAC,EAAG,GAAI,KACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,GAAI,KACR,CAAC,EAAG,GAAI,KACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,C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","file":"static/js/main.1ce936c1.chunk.js","sourcesContent":["export interface GlyphLine {\n  value: number[];\n  partName?: string;\n}\n\nexport const getNumColumns = (strokeType: number): number => {\n  switch (strokeType) {\n    case 0:\n    case 1:\n    case 9:\n      return 7;\n    case 2:\n    case 3:\n    case 4:\n      return 9;\n    case 6:\n    case 7:\n    case 99:\n      return 11;\n    default:\n      return 0;\n  }\n};\n\nexport const parseGlyphLine = (glyphLineStr: string): GlyphLine => {\n  const splitLine = glyphLineStr.split(':');\n  const strokeType = +splitLine[0];\n  const numColumns = getNumColumns(strokeType);\n  const value = [];\n  for (let i = 0; i < numColumns; i++) {\n    value.push(Math.floor(+splitLine[i] || 0));\n  }\n  if (value[0] === 99) {\n    const partName = splitLine[7] || '';\n    return { value, partName }\n  }\n  return { value };\n};\n\nexport const unparseGlyphLine = (glyphLine: GlyphLine): string => {\n  const values: (number | string)[] = glyphLine.value.map((num) => Math.round(num));\n  if (values[0] === 99) {\n    values[7] = glyphLine.partName || '';\n  }\n  return values.join(':');\n};\n\nexport const isValidGlyphLine = (glyphLine: GlyphLine): boolean => (\n  glyphLine.value.length !== 0 &&\n  (\n    glyphLine.value[0] !== 0 ||\n    glyphLine.value[1] === 97 || glyphLine.value[1] === 98 || glyphLine.value[1] === 99\n  )\n);\n\n\nexport type Glyph = GlyphLine[];\n\nexport const parseGlyph = (glyphStr: string): Glyph => (\n  glyphStr.split(/[$\\r\\n]+/)\n    .map((line) => parseGlyphLine(line))\n    .filter((gLine) => isValidGlyphLine(gLine))\n);\n\nexport const unparseGlyph = (glyph: Glyph): string => (\n  glyph\n    .map((gLine) => unparseGlyphLine(gLine))\n    .join('$')\n);\n\nexport const isGlyphDeepEqual = (glyph1: Glyph, glyph2: Glyph) => (\n  glyph1 === glyph2 || (\n    glyph1.length === glyph2.length &&\n    glyph1.every((glyphLine1, index) => {\n      const glyphLine2 = glyph2[index];\n      return glyphLine1 === glyphLine2 || (\n        glyphLine1.partName === glyphLine2.partName &&\n        glyphLine1.value.length === glyphLine2.value.length &&\n        glyphLine1.value.every((value1, index) => value1 === glyphLine2.value[index])\n      );\n    })\n  )\n);\n\n\nexport interface PointDescriptor {\n  lineIndex: number;\n  pointIndex: number;\n}\n","const args = new URLSearchParams(window.location.hash.slice(1));\n\nlet host = args.get('host');\nlet ssl = args.get('ssl') !== 'false';\nconst name = args.get('name');\nconst related = args.get('related') || 'u3013';\nconst edittime = args.get('edittime');\nconst data = args.get('data') || '';\nconst summary = args.get('summary') || '';\n\nconst gwHosts = [\n  'glyphwiki.org',\n  'en.glyphwiki.org',\n  'ko.glyphwiki.org',\n  'zhs.glyphwiki.org',\n  'zht.glyphwiki.org',\n  'non-ssl.glyphwiki.org',\n];\n\nif (!host && document.referrer) {\n  try {\n    const referrerUrl = new URL(document.referrer);\n    if (gwHosts.includes(referrerUrl.host)) {\n      host = referrerUrl.host;\n      ssl = referrerUrl.protocol === 'https:';\n    }\n  } catch (e) {\n  }\n}\n\nif (!host || !gwHosts.includes(host)) {\n  host = 'glyphwiki.org';\n}\n\nconst sanitizedArgs = {\n  host,\n  ssl,\n  name,\n  related,\n  edittime,\n  data,\n  summary,\n};\n\nexport default sanitizedArgs;\n","import actionCreatorFactory from 'typescript-fsa';\n\nexport type CTMInv = (x: number, y: number) => [number, number];\nexport enum RectPointPosition {\n  north,\n  south,\n  east,\n  west,\n  southeast,\n  southwest,\n  northeast,\n  northwest,\n}\n\nconst actionCreator = actionCreatorFactory('EDITOR');\n\nexport const dragActions = {\n  startBackgroundDrag: actionCreator<React.MouseEvent>('BACKGROUND_DRAG_START'),\n  startSelectionDrag: actionCreator<React.MouseEvent>('SELECTION_DRAG_START'),\n  startPointDrag: actionCreator<[React.MouseEvent, number]>('MOVE_POINT_START'),\n  startResize: actionCreator<[React.MouseEvent, RectPointPosition]>('RESIZE_START'),\n\n  mouseMove: actionCreator<MouseEvent>('MOUSE_MOVE'),\n  mouseUp: actionCreator<MouseEvent>('MOUSE_UP'),\n\n  updateCTMInv: actionCreator<CTMInv>('UPDATE_CTMINV'),\n}\n","import actionCreatorFactory from 'typescript-fsa';\n\nconst actionCreator = actionCreatorFactory('SELECT');\n\nexport const selectActions = {\n  selectSingle: actionCreator<number>('SELECT_SINGLE'),\n  selectAddSingle: actionCreator<number>('SELECT_ADD_SINGLE'),\n  selectRemoveSingle: actionCreator<number>('SELECT_REMOVE_SINGLE'),\n  selectNone: actionCreator('SELECT_NONE'),\n  selectAll: actionCreator('SELECT_ALL'),\n  selectDeselected: actionCreator('SELECT_TOGGLE_ALL'),\n  selectPrev: actionCreator('SELECT_PREV'),\n  selectNext: actionCreator('SELECT_NEXT'),\n};\n","import { ReducerBuilder } from 'typescript-fsa-reducers';\n\nimport { selectActions } from '../actions/select';\n\nimport { AppState } from '.';\n\nconst updateBuilder = (builder: ReducerBuilder<AppState>) => builder\n  .case(selectActions.selectSingle, (state, index) => ({\n    ...state,\n    selection: [index],\n  }))\n  .case(selectActions.selectAddSingle, (state, index) => ({\n    ...state,\n    selection: state.selection.includes(index) ? state.selection : state.selection.concat([index]),\n  }))\n  .case(selectActions.selectRemoveSingle, (state, index) => ({\n    ...state,\n    selection: state.selection.filter((index2) => index !== index2),\n  }))\n  .case(selectActions.selectAll, (state) => ({\n    ...state,\n    selection: state.glyph.map((_gLine, index) => index),\n  }))\n  .case(selectActions.selectDeselected, (state) => ({\n    ...state,\n    selection: state.glyph.map((_gLine, index) => index).filter((index) => !state.selection.includes(index)),\n  }))\n  .case(selectActions.selectNone, (state) => ({\n    ...state,\n    selection: [],\n  }))\n  .case(selectActions.selectPrev, (state) => {\n    if (state.glyph.length === 0) {\n      return { ...state, selection: [] };\n    }\n    const firstSelected = state.selection.length === 0 ? 0 : Math.min(...state.selection);\n    return {\n      ...state,\n      selection: [(firstSelected - 1 + state.glyph.length) % state.glyph.length],\n    };\n  })\n  .case(selectActions.selectNext, (state) => {\n    if (state.glyph.length === 0) {\n      return { ...state, selection: [] };\n    }\n    const firstSelected = state.selection.length === 0 ? -1 : Math.max(...state.selection);\n    return {\n      ...state,\n      selection: [(firstSelected + 1 + state.glyph.length) % state.glyph.length],\n    };\n  });\n\n\nexport default updateBuilder;\n","import { Glyph, GlyphLine } from './glyph';\nimport { applyGlyphLineOperation } from './transform';\n\nconst sum = (nums: number[]) => nums.reduce((a, b) => a + b, 0);\nconst avg = (nums: number[]) => sum(nums) / nums.length;\nconst min: {\n  (data: number[]): number;\n  <T>(data: T[], ev: (val: T) => number): number;\n} = (data: any[], ev?: (val: any) => number) => {\n  let result = Infinity;\n  for (const datum of data) {\n    const val = ev ? ev(datum) : datum as number;\n    if (val < result) {\n      result = val;\n    }\n  }\n  return result;\n};\nconst minBy = <T>(data: T[], ev: (val: T) => number): T | undefined => {\n  let result: T | undefined = undefined;\n  let minVal = Infinity;\n  for (const datum of data) {\n    const val = ev(datum);\n    if (val < minVal) {\n      result = datum;\n      minVal = val;\n    }\n  }\n  return result;\n};\n\nconst lerp = (x1: number, x2: number, k: number) => x1 * (1 - k) + x2 * k;\nconst norm2 = (dx: number, dy: number) => dx * dx + dy * dy;\n\nexport const drawFreehand = (glyph: Glyph, points: [number, number][]): Glyph => {\n  const [startX, startY] = points[0];\n  const [endX, endY] = points[points.length - 1];\n  const dx = endX - startX;\n  const dy = endY - startY;\n\n  if (glyph.length > 0 && norm2(dx, dy) < 25 ** 2) {\n    const lastStroke = glyph[glyph.length - 1];\n    // ハネ部分かどうか？\n    if (\n      [1, 2, 3, 4, 6].includes(lastStroke.value[0]) &&\n      norm2(\n        startX - lastStroke.value[lastStroke.value.length - 2],\n        startY - lastStroke.value[lastStroke.value.length - 1]\n      ) < 10 ** 2\n    ) {\n      if ([1, 2, 6].includes(lastStroke.value[0]) && dx < 0) { // 左ハネに変更\n        const newLastStroke: GlyphLine = {\n          value: lastStroke.value.slice(),\n        };\n        newLastStroke.value[2] = 4;\n        if (newLastStroke.value[1] === 27) {\n          newLastStroke.value[1] = 22;\n        }\n        return glyph.slice(0, -1).concat([newLastStroke]);\n      }\n      if ([2, 6].includes(lastStroke.value[0]) && dx >= 0 && dy < 0) { // 右ハネに変更\n        const newLastStroke: GlyphLine = {\n          value: lastStroke.value.slice(),\n        };\n        newLastStroke.value[2] = 5;\n        if (newLastStroke.value[1] === 7) {\n          newLastStroke.value[1] = 0;\n        } else if (newLastStroke.value[1] === 27) {\n          newLastStroke.value[1] = 22;\n        }\n        return glyph.slice(0, -1).concat([newLastStroke]);\n      }\n      if ([3, 4].includes(lastStroke.value[0]) && dy < 0) { // 上ハネに変更\n        const newLastStroke: GlyphLine = {\n          value: lastStroke.value.slice(),\n        };\n        newLastStroke.value[2] = 5;\n        return glyph.slice(0, -1).concat([newLastStroke]);\n      }\n    }\n  }\n\n  const centroidX = avg(points.map(([x]) => x));\n  const centroidY = avg(points.map(([_x, y]) => y));\n\n  const midLerpRate = 3;\n  const midX = lerp((startX + endX) / 2, centroidX, midLerpRate);\n  const midY = lerp((startY + endY) / 2, centroidY, midLerpRate);\n\n  const dis = (dx * midY - dy * midX + startX * endY - startY * endX) / Math.sqrt(norm2(dx, dy));\n  if (\n    Math.abs(dis) <= 5 && // 曲がっていない\n    (\n      (dx > 0 && Math.abs(dy) <= dx * 0.5) || // 横\n      (dy > 0 && -dy <= dx && dx <= dy * 0.5) // 縦\n    )\n  ) { // 直線\n    const newStroke: GlyphLine = {\n      value: [1, 0, 0, startX, startY, endX, endY],\n    };\n    return correctStroke(glyph, newStroke);\n  }\n  if (dx < 0 && dy >= 50 && dis < 0 && dx * -3 < dy) { // 縦払い\n    const mid1X = startX;\n    const mid1Y = lerp(startY, endY, 1 / 3);\n    const mid2X = startX;\n    const mid2Y = lerp(startY, endY, 2 / 3);\n    const newStroke: GlyphLine = {\n      value: [7, 0, 7, startX, startY, mid1X, mid1Y, mid2X, mid2Y, endX, endY],\n    };\n    return correctStroke(glyph, newStroke);\n  }\n  // 曲線\n  let startType = 0;\n  let endType = 7;\n  if (dx > 0 && dy > 0 && dis > 0) { // 右払い or 折れ\n    const [leftBottomX, leftBottomY] = minBy(points, ([x, y]) => x - y)!;\n    const dx1 = startX - leftBottomX;\n    const dy1 = startY - leftBottomY;\n    const dx2 = endX - leftBottomX;\n    const dy2 = endY - leftBottomY;\n    const cosAngle = (dx1 * dx2 + dy1 * dy2) / Math.sqrt(norm2(dx1, dy1) * norm2(dx2, dy2));\n    if (dx1 < 50 && dx2 > 30 && -20 <= dy2 && dy2 <= 20 && cosAngle > -0.15) {\n      // 折れ\n      const midX = min(points, ([x]) => x);\n      const midY = endY;\n      const newStroke: GlyphLine = {\n        value: [3, 0, 0, startX, startY, midX, midY, endX, endY],\n      };\n      return correctStroke(glyph, newStroke);\n    }\n    startType = 7;\n    endType = 0;\n  } else if (dx > 0 && dy > 0 && dis < 0) { // 止め\n    startType = 7;\n    endType = 8;\n  }\n  const newStroke: GlyphLine = {\n    value: [2, startType, endType, startX, startY, midX, midY, endX, endY],\n  };\n  return correctStroke(glyph, newStroke);\n};\n\nconst round = (x: number) => Math.round(x);\n\nlet snapped: boolean[];\n\nconst correctStroke = (glyph: Glyph, newStroke: GlyphLine): Glyph => {\n  snapped = newStroke.value.map(() => false);\n  glyph = snapStrokeStart(glyph, newStroke);\n  glyph = snapStrokeEnd(glyph, newStroke);\n  snapStrokeTilt(newStroke);\n  newStroke = applyGlyphLineOperation(newStroke, round, round)\n  glyph = snapToNewStroke(glyph, newStroke);\n  return glyph.concat([newStroke]);\n};\n\nconst setGlyphValue = (glyph: Glyph, lineIndex: number, column: number, value: number): Glyph => {\n  if (glyph[lineIndex].value[column] === value) {\n    return glyph;\n  }\n  return glyph.map((gLine, index) => {\n    if (index !== lineIndex) {\n      return gLine;\n    }\n    const newGLine: GlyphLine = {\n      ...gLine,\n      value: gLine.value.slice(),\n    };\n    newGLine.value[column] = value;\n    return newGLine;\n  });\n};\n\nconst snapVerticalStroke = (\n  glyph: Glyph, vertStroke: GlyphLine, position: 'start' | 'end',\n  leftType: number, middleType: number, rightType: number\n): Glyph => {\n  const ti = position === 'start' ? 1 : 2;\n  const xi = position === 'start' ? 3 : vertStroke.value.length - 2;\n  const yi = xi + 1;\n  const nx = vertStroke.value[xi];\n  const ny = vertStroke.value[yi];\n  const minX = nx - 10;\n  const maxX = nx + 10;\n  const minY = ny - 10;\n  const maxY = ny + 10;\n  for (let lineIndex = glyph.length - 1; lineIndex >= 0; lineIndex--) {\n    const horiStroke = glyph[lineIndex];\n    if (horiStroke.value[0] !== 1) {\n      continue;\n    }\n    const x1 = horiStroke.value[3];\n    const y1 = horiStroke.value[4];\n    const x2 = horiStroke.value[5];\n    const y2 = horiStroke.value[6];\n    if (x2 - x1 < Math.abs(y2 - y1)) {\n      continue;\n    }\n    if (\n      [0, 2].includes(horiStroke.value[1]) &&\n      minX <= x1 && x1 <= maxX &&\n      minY <= y1 && y1 <= maxY\n    ) {\n      vertStroke.value[xi] = x1;\n      vertStroke.value[yi] = y1;\n      snapped[xi] = snapped[yi] = true;\n      vertStroke.value[ti] = leftType;\n      return setGlyphValue(glyph, lineIndex, 1, 2); // 接続(横)\n    }\n    if (\n      [0, 2].includes(horiStroke.value[2]) &&\n      minX <= x2 && x2 <= maxX &&\n      minY <= y2 && y2 <= maxY\n    ) {\n      vertStroke.value[xi] = x2;\n      vertStroke.value[yi] = y2;\n      snapped[xi] = snapped[yi] = true;\n      vertStroke.value[ti] = rightType;\n      return setGlyphValue(glyph, lineIndex, 2, 2); // 接続(横)\n    }\n    if (y1 === y2 && minY <= y1 && y1 <= maxY && x1 <= nx && nx <= x2) {\n      vertStroke.value[yi] = y1;\n      snapped[yi] = true;\n      vertStroke.value[ti] = middleType;\n      return glyph;\n    }\n  }\n  return glyph;\n};\n\nconst snapHorizontalStroke = (glyph: Glyph, horiStroke: GlyphLine, position: 'start' | 'end'): Glyph => {\n  const ti = position === 'start' ? 1 : 2;\n  const xi = position === 'start' ? 3 : 5;\n  const yi = xi + 1;\n  const nx = horiStroke.value[xi];\n  const ny = horiStroke.value[yi];\n  const minX = nx - 10;\n  const maxX = nx + 10;\n  const minY = ny - 10;\n  const maxY = ny + 10;\n  for (let lineIndex = glyph.length - 1; lineIndex >= 0; lineIndex--) {\n    const vertStroke = glyph[lineIndex];\n    if (![1, 2, 3, 4, 6, 7].includes(vertStroke.value[0])) {\n      continue;\n    }\n    const x1 = vertStroke.value[3];\n    const y1 = vertStroke.value[4];\n    const x2 = vertStroke.value[5];\n    const y2 = vertStroke.value[6];\n    if (vertStroke.value[0] === 1 && x2 - x1 > Math.abs(y2 - y1)) {\n      continue;\n    }\n    if (position === 'start') {\n      if (\n        [0, 12].includes(vertStroke.value[1]) &&\n        minX <= x1 && x1 <= maxX &&\n        minY <= y1 && y1 <= maxY\n      ) {\n        horiStroke.value[xi] = x1;\n        horiStroke.value[yi] = y1;\n        snapped[xi] = snapped[yi] = true;\n        horiStroke.value[ti] = 2;\n        return setGlyphValue(glyph, lineIndex, 1, 12); // 左上カド\n      }\n      if (\n        vertStroke.value[0] === 1 &&\n        [0, 13, 313, 413].includes(vertStroke.value[2]) &&\n        minX <= x2 && x2 <= maxX &&\n        minY <= y2 && y2 <= maxY\n      ) {\n        horiStroke.value[xi] = x2;\n        horiStroke.value[yi] = y2;\n        snapped[xi] = snapped[yi] = true;\n        horiStroke.value[ti] = 2;\n        return vertStroke.value[2] === 0\n          ? setGlyphValue(glyph, lineIndex, 2, 13) // 左下カド\n          : glyph;\n      }\n    } else {\n      if (\n        [0, 22].includes(vertStroke.value[1]) &&\n        minX <= x1 && x1 <= maxX &&\n        minY <= y1 && y1 <= maxY\n      ) {\n        horiStroke.value[xi] = x1;\n        horiStroke.value[yi] = y1;\n        snapped[xi] = snapped[yi] = true;\n        horiStroke.value[ti] = 2;\n        return setGlyphValue(glyph, lineIndex, 1, 22); // 右上カド\n      }\n      if (\n        vertStroke.value[0] === 1 &&\n        [0, 23, 24].includes(vertStroke.value[2]) &&\n        minX <= x2 && x2 <= maxX &&\n        minY <= y2 && y2 <= maxY\n      ) {\n        horiStroke.value[xi] = x2;\n        horiStroke.value[yi] = y2;\n        snapped[xi] = snapped[yi] = true;\n        horiStroke.value[ti] = 2;\n        return vertStroke.value[2] === 0\n          ? setGlyphValue(glyph, lineIndex, 2, 23) // 右下カド\n          : glyph;\n      }\n    }\n    if (x1 === x2 && minX <= x1 && x1 <= maxX && y1 <= ny && ny <= y2) {\n      horiStroke.value[xi] = x1;\n      snapped[xi] = true;\n      horiStroke.value[ti] = 2;\n      return glyph;\n    }\n  }\n  return glyph;\n};\n\nconst snapStrokeStart = (glyph: Glyph, newStroke: GlyphLine): Glyph => {\n  if (newStroke.value[0] !== 1) {\n    const y1 = newStroke.value[4];\n    const y2 = newStroke.value[6];\n    if (y1 > y2) {\n      return glyph;\n    }\n    const midStartShape = newStroke.value[1] === 7 ? 7 : 32;\n    const rightStartShape = newStroke.value[1] === 7 ? 27 : 22;\n    return snapVerticalStroke(glyph, newStroke, 'start', 12, midStartShape, rightStartShape);\n  }\n  const x1 = newStroke.value[3];\n  const y1 = newStroke.value[4];\n  const x2 = newStroke.value[5];\n  const y2 = newStroke.value[6];\n  if (x2 - x1 > Math.abs(y2 - y1)) {\n    return snapHorizontalStroke(glyph, newStroke, 'start');\n  }\n  if (y2 - y1 > 0) {\n    return snapVerticalStroke(glyph, newStroke, 'start', 12, 32, 22);\n  }\n  return glyph;\n};\nconst snapStrokeSegmentTilt = (newStroke: GlyphLine, point1Index: number) => {\n  const x1i = 3 + point1Index * 2;\n  const y1i = x1i + 1;\n  const x2i = x1i + 2;\n  const y2i = x1i + 3;\n\n  const x1 = newStroke.value[x1i];\n  const y1 = newStroke.value[y1i];\n  const x2 = newStroke.value[x2i];\n  const y2 = newStroke.value[y2i];\n\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n\n  if (Math.abs(dx) > Math.abs(dy) * 20) {\n    if (!snapped[y2i]) {\n      newStroke.value[y2i] = y1;\n      return;\n    }\n    if (!snapped[y1i]) {\n      newStroke.value[y1i] = y2;\n      return;\n    }\n  }\n  if (Math.abs(dy) > Math.abs(dx) * 20) {\n    if (!snapped[x2i]) {\n      newStroke.value[x2i] = x1;\n      return;\n    }\n    if (!snapped[x1i]) {\n      newStroke.value[x1i] = x2;\n      return;\n    }\n  }\n};\nconst snapStrokeTilt = (newStroke: GlyphLine) => {\n  switch (newStroke.value[0]) {\n    case 1:\n      snapStrokeSegmentTilt(newStroke, 0);\n      return;\n    case 3:\n      snapStrokeSegmentTilt(newStroke, 0);\n      snapStrokeSegmentTilt(newStroke, 1);\n      return;\n    case 4:\n      snapStrokeSegmentTilt(newStroke, 1);\n      return;\n    case 7:\n      newStroke.value[5] = newStroke.value[7] = newStroke.value[3];\n  }\n};\nconst snapStrokeEnd = (glyph: Glyph, newStroke: GlyphLine): Glyph => {\n  if (newStroke.value[0] !== 1) {\n    return glyph;\n  }\n  const x1 = newStroke.value[3];\n  const y1 = newStroke.value[4];\n  const x2 = newStroke.value[5];\n  const y2 = newStroke.value[6];\n  if (x2 - x1 > Math.abs(y2 - y1)) {\n    return snapHorizontalStroke(glyph, newStroke, 'end');\n  }\n  if (y2 - y1 > 0) {\n    return snapVerticalStroke(glyph, newStroke, 'end', 13, 32, 23);\n  }\n  return glyph;\n};\nconst snapToNewStroke = (glyph: Glyph, newStroke: GlyphLine): Glyph => {\n  if (newStroke.value[0] !== 1) {\n    return glyph;\n  }\n  const x1 = newStroke.value[3];\n  const y1 = newStroke.value[4];\n  const x2 = newStroke.value[5];\n  const y2 = newStroke.value[6];\n  if (y1 !== y2) {\n    return glyph;\n  }\n  const minY = y1 - 10;\n  const maxY = y1 + 10;\n  glyph.forEach((gLine, lineIndex) => {\n    if (gLine.value[0] !== 1 || gLine.value[2] !== 0) {\n      return;\n    }\n    const sx1 = gLine.value[3];\n    const sy1 = gLine.value[4];\n    const sx2 = gLine.value[5];\n    const sy2 = gLine.value[6];\n    if (sx2 - sx1 > Math.abs(sy2 - sy1)) {\n      return;\n    }\n    if (minY <= sy2 && sy2 <= maxY && x1 <= sx2 && sx2 <= x2) {\n      glyph = setGlyphValue(glyph, lineIndex, 2, 32);\n      glyph = setGlyphValue(glyph, lineIndex, 6, y1);\n    }\n  });\n  return glyph;\n};\n","export enum ReflectRotateType {\n  reflectX,\n  reflectY,\n  rotate90,\n  rotate180,\n  rotate270,\n}\n\nexport const reflectRotateTypes = [\n  ReflectRotateType.reflectX,\n  ReflectRotateType.reflectY,\n  ReflectRotateType.rotate90,\n  ReflectRotateType.rotate180,\n  ReflectRotateType.rotate270,\n];\n\nexport const reflectRotateTypeParamsMap: Record<ReflectRotateType, [number, number]> = {\n  [ReflectRotateType.reflectX]: [98, 0],\n  [ReflectRotateType.reflectY]: [97, 0],\n  [ReflectRotateType.rotate90]: [99, 1],\n  [ReflectRotateType.rotate180]: [99, 2],\n  [ReflectRotateType.rotate270]: [99, 3],\n};\n","import memoizeOne from 'memoize-one';\n\nimport { GlyphLine, Glyph, PointDescriptor, getNumColumns } from './glyph';\n\ninterface ConnectablePoint {\n  position: 'start' | 'end';\n  strokeType: number;\n  shapeType: number;\n  coord: [number, number];\n  pointIndex: number;\n}\n\ninterface ConnectablePointFilter {\n  position: 'start' | 'end';\n  strokeTypes: number[];\n  shapeTypes: number[];\n}\n\nconst connectablePairs: [ConnectablePointFilter, ConnectablePointFilter][] = [\n  [\n    // 左上\n    {\n      position: 'start',\n      strokeTypes: [1],\n      shapeTypes: [2],\n    },\n    {\n      position: 'start',\n      strokeTypes: [1, 2, 3, 4, 6, 7],\n      shapeTypes: [12],\n    },\n  ],\n  [\n    // 左下\n    {\n      position: 'start',\n      strokeTypes: [1],\n      shapeTypes: [2],\n    },\n    {\n      position: 'end',\n      strokeTypes: [1],\n      shapeTypes: [13, 313, 413],\n    },\n  ],\n  [\n    // 右上\n    {\n      position: 'end',\n      strokeTypes: [1],\n      shapeTypes: [2],\n    },\n    {\n      position: 'start',\n      strokeTypes: [1, 2, 3, 4, 6, 7],\n      shapeTypes: [22, 27],\n    },\n  ],\n  [\n    // 右下\n    {\n      position: 'end',\n      strokeTypes: [1],\n      shapeTypes: [2],\n    },\n    {\n      position: 'end',\n      strokeTypes: [1],\n      shapeTypes: [23, 24],\n    },\n  ],\n];\n\nconst matchConnectablePoint = (filter: ConnectablePointFilter, point: ConnectablePoint) => (\n  filter.position === point.position &&\n  filter.strokeTypes.includes(point.strokeType) &&\n  filter.shapeTypes.includes(point.shapeType)\n)\n\nconst isConnectable = (point1: ConnectablePoint, point2: ConnectablePoint) => (\n  point1.coord[0] === point2.coord[0] &&\n  point1.coord[1] === point2.coord[1] &&\n  connectablePairs.some(([filter1, filter2]) => (\n    (matchConnectablePoint(filter1, point1) && matchConnectablePoint(filter2, point2)) ||\n    (matchConnectablePoint(filter2, point1) && matchConnectablePoint(filter1, point2))\n  ))\n);\n\nconst getConnectablePoints = (glyphLine: GlyphLine): ConnectablePoint[] => {\n  const result: ConnectablePoint[] = [];\n  switch (glyphLine.value[0]) {\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 6:\n    case 7: {\n      result.push({\n        position: 'start',\n        strokeType: glyphLine.value[0],\n        shapeType: glyphLine.value[1],\n        coord: [\n          glyphLine.value[3],\n          glyphLine.value[4],\n        ],\n        pointIndex: 0,\n      });\n      const endPointIndex = (getNumColumns(glyphLine.value[0]) - 3) / 2 - 1;\n      result.push({\n        position: 'end',\n        strokeType: glyphLine.value[0],\n        shapeType: glyphLine.value[2],\n        coord: [\n          glyphLine.value[3 + endPointIndex * 2],\n          glyphLine.value[3 + endPointIndex * 2 + 1],\n        ],\n        pointIndex: endPointIndex,\n      });\n      break;\n    }\n  }\n  return result;\n};\n\nexport const listupConnectedPoints = memoizeOne((glyph: Glyph, points: PointDescriptor[]): PointDescriptor[] => {\n  const sPoints: ConnectablePoint[] = [];\n  for (const { lineIndex, pointIndex } of points) {\n    for (const sPoint of getConnectablePoints(glyph[lineIndex])) {\n      if (sPoint.pointIndex === pointIndex) {\n        sPoints.push(sPoint);\n      }\n    }\n  }\n  const result: PointDescriptor[] = [];\n  glyph.forEach((glyphLine, lineIndex) => {\n    for (const dPoint of getConnectablePoints(glyphLine)) {\n      if (sPoints.some((sPoint) => isConnectable(sPoint, dPoint))) {\n        result.push({\n          lineIndex,\n          pointIndex: dPoint.pointIndex,\n        });\n      }\n    }\n  });\n  return result;\n}, ([glyph1, points1], [glyph2, points2]) => (\n  glyph1 === glyph2 &&\n  points1.length === points2.length &&\n  points1.every((point1, index) => (\n    point1.lineIndex === points2[index].lineIndex &&\n    point1.pointIndex === points2[index].pointIndex\n  ))\n));\n\nexport const listupConnectedPointsOfSelection = memoizeOne((glyph: Glyph, selection: number[]): PointDescriptor[] => {\n  const selectedDescs: PointDescriptor[] = [];\n  for (const lineIndex of selection) {\n    const glyphLine = glyph[lineIndex];\n    selectedDescs.push({ lineIndex, pointIndex: 0 });\n    selectedDescs.push({ lineIndex, pointIndex: (getNumColumns(glyphLine.value[0]) - 3) / 2 - 1 });\n  }\n  return listupConnectedPoints(glyph, selectedDescs)\n    .filter(({ lineIndex }) => !selection.includes(lineIndex));\n});\n","import { GlyphLine, Glyph, PointDescriptor } from './glyph';\n\nimport { BBX } from './bbx';\nimport { listupConnectedPoints, listupConnectedPointsOfSelection } from './connection';\n\nexport const applyGlyphLineOperation = (glyphLine: GlyphLine, tX: (x: number) => number, tY: (y: number) => number): GlyphLine => {\n  switch (glyphLine.value[0]) {\n    case 99: {\n      const value = glyphLine.value.slice();\n      value[3] = tX(value[3]);\n      value[4] = tY(value[4]);\n      value[5] = tX(value[5]);\n      value[6] = tY(value[6]);\n      return { value, partName: glyphLine.partName };\n    }\n    case 0:\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 6:\n    case 7:\n    case 9: {\n      const value = glyphLine.value.slice();\n      for (let i = 3; i + 2 <= value.length; i += 2) {\n        value[i] = tX(value[i]);\n        value[i + 1] = tY(value[i + 1]);\n      }\n      return { value };\n    }\n    default:\n      return glyphLine;\n  }\n}\n\nexport const applyGlyphPointOperation = (glyph: Glyph, pdescs: PointDescriptor[], tX: (x: number) => number, tY: (y: number) => number): Glyph => {\n  if (pdescs.length === 0) {\n    return glyph;\n  }\n  const newGlyph = glyph.slice();\n  for (const { lineIndex, pointIndex } of pdescs) {\n    const glyphLine = newGlyph[lineIndex];\n    const newValue = glyphLine.value.slice();\n    newValue[3 + pointIndex * 2] = tX(newValue[3 + pointIndex * 2]);\n    newValue[3 + pointIndex * 2 + 1] = tY(newValue[3 + pointIndex * 2 + 1]);\n    newGlyph[lineIndex] = {\n      ...glyphLine,\n      value: newValue,\n    };\n  }\n  return newGlyph;\n};\n\n\nexport const moveSelectedGlyphLines = (glyph: Glyph, selection: number[], dx: number, dy: number): Glyph => {\n  if (selection.length === 0) {\n    return glyph;\n  }\n  const targetDescs = listupConnectedPointsOfSelection(glyph, selection);\n\n  const tX = (x: number) => Math.round(x + dx);\n  const tY = (y: number) => Math.round(y + dy);\n  glyph = glyph.map((glyphLine, index) => selection.includes(index)\n    ? applyGlyphLineOperation(glyphLine, tX, tY)\n    : glyphLine\n  );\n  glyph = applyGlyphPointOperation(glyph, targetDescs, tX, tY);\n  return glyph;\n};\n\nexport const moveSelectedPoint = (glyph: Glyph, selection: number[], pointIndex: number, dx: number, dy: number): Glyph => {\n  if (selection.length === 0) {\n    return glyph;\n  }\n  const lineIndex = selection[0];\n  const selectedDesc: PointDescriptor = { lineIndex, pointIndex };\n  const targetDescs = listupConnectedPoints(glyph, [selectedDesc])\n    .filter((targetDesc) => targetDesc.lineIndex !== lineIndex);\n  targetDescs.push(selectedDesc);\n\n  const tX = (x: number) => Math.round(x + dx);\n  const tY = (y: number) => Math.round(y + dy);\n  glyph = applyGlyphPointOperation(glyph, targetDescs, tX, tY);\n  return glyph;\n};\n\nexport const resizeGlyphLine = (glyphLine: GlyphLine, oldBBX: BBX, newBBX: BBX): GlyphLine => {\n  const [x11, y11, x12, y12] = oldBBX;\n  const [x21, y21, x22, y22] = newBBX;\n  const tX = (x: number) => Math.round(x21 + (x - x11) * (x22 - x21) / (x12 - x11));\n  const tY = (y: number) => Math.round(y21 + (y - y11) * (y22 - y21) / (y12 - y11));\n  return applyGlyphLineOperation(glyphLine, tX, tY);\n};\n\nexport const resizeSelectedGlyphLines = (glyph: Glyph, selection: number[], oldBBX: BBX, newBBX: BBX): Glyph => {\n  return glyph.map((glyphLine, index) => selection.includes(index)\n    ? resizeGlyphLine(glyphLine, oldBBX, newBBX)\n    : glyphLine\n  );\n};\n","import actionCreatorFactory from 'typescript-fsa';\n\nimport { StretchParam } from '../kageUtils/stretchparam';\nimport { ReflectRotateType } from '../kageUtils/reflectrotate';\n\nconst actionCreator = actionCreatorFactory('EDITOR');\n\nexport const editorActions = {\n  loadedBuhin: actionCreator<[string, string]>('LOAD_BUHIN_DATA'),\n  loadedStretchParam: actionCreator<[string, StretchParam]>('LOAD_STRETCH_PARAM'),\n\n  changeStrokeType: actionCreator<number>('CHANGE_STROKE_TYPE'),\n  changeHeadShapeType: actionCreator<number>('CHANGE_HEAD_SHAPE_TYPE'),\n  changeTailShapeType: actionCreator<number>('CHANGE_TAIL_SHAPE_TYPE'),\n  changeStretchCoeff: actionCreator<number>('CHANGE_STRETCH_COEFF'),\n  changeReflectRotateOpType: actionCreator<ReflectRotateType>('CHANGE_REFLECT_ROTATE_OPTYPE'),\n\n  swapWithPrev: actionCreator('SWAP_WITH_PREV'),\n  swapWithNext: actionCreator('SWAP_WITH_NEXT'),\n\n  insertPart: actionCreator<string>('ADD_PART'),\n\n  paste: actionCreator('PASTE'),\n  copy: actionCreator('COPY_SELECTION'),\n  cut: actionCreator('CUT_SELECTION'),\n  delete: actionCreator('DELETE_SELECTION'),\n  decomposeSelected: actionCreator('DECOMPOSE_SELECTION'),\n  moveSelected: actionCreator<[number, number]>('MOVE_SELECTED'),\n\n  toggleFreehand: actionCreator('TOGGLE_FREEHAND_MODE'),\n\n  escape: actionCreator('PRESS_ESC_KEY'),\n\n  finishEdit: actionCreator<Event>('FINISH_EDIT'),\n};\n","// The temporary reverse proxy which adds 'Access-Control-Allow-Origin: *' header.\n// This header is required for cross-origin requests.\nconst apiUrlPrefix = 'https://asia-northeast1-ku6goma.cloudfunctions.net/gwproxy';\n\nconst callApi = async (path: string) => {\n  const response = await fetch(apiUrlPrefix + path);\n  if (!response.ok) {\n    throw new Error('API error occurred');\n  }\n  return new URLSearchParams(await response.text());\n};\n\nexport const getSource = async (name: string) => {\n  const result = await callApi(`/get_source.cgi?name=${encodeURIComponent(name)}`);\n  return result.get('data');\n};\n\nexport const search = async (query: string) => {\n  const result = await callApi(`/search4ge.cgi?query=${encodeURIComponent(query)}`);\n  return result.get('data')!;\n};\n\nexport const getCandidate = async (name: string) => {\n  const result = await callApi(`/get_candidate.cgi?name=${encodeURIComponent(name)}`);\n  return result.get('data')!;\n};\n","import memoizeOne from 'memoize-one';\n\nimport { Kage, Polygons } from '@kurgm/kage-engine';\nimport { Glyph, unparseGlyphLine } from './kageUtils/glyph';\nimport { StretchParam } from './kageUtils/stretchparam';\n\nimport store from './store';\nimport { editorActions } from './actions/editor';\n\nimport { getSource } from './callapi';\n\nexport type KShotai = Kage[\"kShotai\"];\n\nconst kage_ = new Kage();\n\nexport const getKage = (buhinMap: Map<string, string>, fallback?: (name: string) => string | undefined | void, shotai?: KShotai): Kage => {\n  kage_.kBuhin.search = (name) => {\n    let result = buhinMap.get(name);\n    if (typeof result === 'undefined') {\n      result = fallback?.(name) || '';\n    }\n    return result;\n  };\n  if (typeof shotai !== 'undefined') {\n    kage_.kShotai = shotai;\n  }\n  return kage_;\n};\n\nlet waiting = new Set<string>();\nconst loadAbsentBuhin = (name: string) => {\n  if (waiting.has(name)) {\n    return;\n  }\n  waiting.add(name);\n  getSource(name)\n    .then((source) => {\n      if (typeof source !== 'string') {\n        throw new Error(`failed to get buhin source of ${name}`);\n      }\n      const stretchMatch = /^0:1:0:(-?\\d+):(-?\\d+):(-?\\d+):(-?\\d+)(?=$|\\$)/.exec(source);\n      if (stretchMatch) {\n        const params: StretchParam = [\n          +stretchMatch[1] || 0,\n          +stretchMatch[2] || 0,\n          +stretchMatch[3] || 0,\n          +stretchMatch[4] || 0,\n        ];\n        store.dispatch(editorActions.loadedStretchParam([name, params]));\n      }\n      store.dispatch(editorActions.loadedBuhin([name, source]));\n      waiting.delete(name);\n    })\n    .catch((err) => console.error(err));\n};\n\nconst filteredGlyphIsEqual = (glyph1: Glyph, glyph2: Glyph) => (\n  glyph1.length === glyph2.length &&\n  glyph1.every((gLine1, index) => (\n    gLine1 === glyph2[index]\n  ))\n);\n\nconst makeGlyphSeparated_ = memoizeOne((glyph: Glyph, map: Map<string, string>, shotai: KShotai): Polygons[] => {\n  const data = glyph.map(unparseGlyphLine);\n  const result = getKage(map, loadAbsentBuhin, shotai).makeGlyphSeparated(data);\n  return result;\n}, ([glyph1, map1, shotai1], [glyph2, map2, shotai2]) => (\n  map1 === map2 &&\n  shotai1 === shotai2 &&\n  filteredGlyphIsEqual(glyph1, glyph2)\n));\n\nconst makeGlyphSeparatedFactory = (\n  isEqual?: (newArgs: Parameters<typeof makeGlyphSeparated_>, lastArgs: Parameters<typeof makeGlyphSeparated_>) => boolean\n) => memoizeOne((glyph: Glyph, map: Map<string, string>, shotai: KShotai): Polygons[] => {\n  return makeGlyphSeparated_(glyph, map, shotai);\n}, isEqual);\n\nexport const makeGlyphSeparated = makeGlyphSeparatedFactory();\nexport const makeGlyphSeparatedForSubmit = makeGlyphSeparatedFactory(\n  ([glyph1, map1, shotai1], [glyph2, map2, shotai2]) => (\n    map1 === map2 &&\n    shotai1 === shotai2 &&\n    filteredGlyphIsEqual(glyph1, glyph2)\n  )\n);\n","import memoizeOne from 'memoize-one';\n\nimport { GlyphLine } from './glyph';\n\nexport type BBX = [number, number, number, number];\n\nexport const bbxOfPoints = (points: [number, number][]): BBX => {\n  const xs = points.map(([x]) => x);\n  const ys = points.map(([, y]) => y);\n  return [\n    Math.min(...xs),\n    Math.min(...ys),\n    Math.max(...xs),\n    Math.max(...ys),\n  ];\n};\n\nexport const getGlyphLineBBX = (glyphLine: GlyphLine): BBX => {\n  switch (glyphLine.value[0]) {\n    case 99:\n      return bbxOfPoints([\n        [glyphLine.value[3], glyphLine.value[4]],\n        [glyphLine.value[5], glyphLine.value[6]],\n      ]);\n    case 0:\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 6:\n    case 7:\n    case 9: {\n      const points: [number, number][] = [];\n      for (let i = 3; i + 2 <= glyphLine.value.length; i += 2) {\n        points.push([glyphLine.value[i], glyphLine.value[i + 1]]);\n      }\n      return bbxOfPoints(points);\n    }\n    default:\n      return bbxOfPoints([]);\n  }\n}\n\nexport const mergeBBX = ([x11, y11, x12, y12]: BBX, [x21, y21, x22, y22]: BBX): BBX => [\n  Math.min(x11, x21),\n  Math.min(y11, y21),\n  Math.max(x12, x22),\n  Math.max(y12, y22),\n];\n\nexport const getGlyphLinesBBX = memoizeOne((glyphLines: GlyphLine[]): BBX => {\n  return glyphLines.map(getGlyphLineBBX).reduce(mergeBBX, bbxOfPoints([]));\n}, ([gLines1], [gLines2]) => (\n  gLines1.length === gLines2.length &&\n  gLines1.every((gLine1, index) => gLine1 === gLines2[index])\n));\n","import { createSelector } from 'reselect';\n\nimport { RectPointPosition } from '../actions/drag';\n\nimport { AppState } from '../reducers';\n\nimport { Glyph, GlyphLine } from '../kageUtils/glyph';\nimport { getGlyphLinesBBX } from '../kageUtils/bbx';\nimport { moveSelectedGlyphLines, moveSelectedPoint, resizeSelectedGlyphLines } from '../kageUtils/transform';\nimport { drawFreehand } from '../kageUtils/freehand';\n\nexport const resizeSelected = (glyph: Glyph, selection: number[], position: RectPointPosition, dx: number, dy: number): Glyph => {\n  if (selection.length === 1) {\n    const selectedGlyphLine = glyph[selection[0]];\n    switch (selectedGlyphLine.value[0]) {\n      case 0:\n      case 9:\n      case 99: {\n        const newValue = selectedGlyphLine.value.slice();\n        switch (position) {\n          case RectPointPosition.north:\n            newValue[4] = Math.round(newValue[4] + dy);\n            break;\n          case RectPointPosition.west:\n            newValue[3] = Math.round(newValue[3] + dx);\n            break;\n          case RectPointPosition.south:\n            newValue[6] = Math.round(newValue[6] + dy);\n            break;\n          case RectPointPosition.east:\n            newValue[5] = Math.round(newValue[5] + dx);\n            break;\n          case RectPointPosition.southeast:\n            newValue[5] = Math.round(newValue[5] + dx);\n            newValue[6] = Math.round(newValue[6] + dy);\n            break;\n          case RectPointPosition.southwest:\n            newValue[3] = Math.round(newValue[3] + dx);\n            newValue[6] = Math.round(newValue[6] + dy);\n            break;\n          case RectPointPosition.northeast:\n            newValue[5] = Math.round(newValue[5] + dx);\n            newValue[4] = Math.round(newValue[4] + dy);\n            break;\n          case RectPointPosition.northwest:\n            newValue[3] = Math.round(newValue[3] + dx);\n            newValue[4] = Math.round(newValue[4] + dy);\n            break;\n          default:\n            // exhaustive?\n            ((_x: never) => { })(position);\n        }\n        const newGlyphLine: GlyphLine = selectedGlyphLine.value[0] === 99\n          ? { value: newValue, partName: selectedGlyphLine.partName }\n          : { value: newValue };\n        return glyph.map((glyphLine, index) => index === selection[0] ? newGlyphLine : glyphLine);\n      }\n    }\n  }\n  const minSize = 20;\n  const oldBBX = getGlyphLinesBBX(selection.map((index) => glyph[index]));\n  const newBBX = oldBBX.slice() as typeof oldBBX;\n  switch (position) {\n    case RectPointPosition.north:\n      newBBX[1] = Math.min(newBBX[1] + dy, newBBX[3] - minSize);\n      break;\n    case RectPointPosition.west:\n      newBBX[0] = Math.min(newBBX[0] + dx, newBBX[2] - minSize);\n      break;\n    case RectPointPosition.south:\n      newBBX[3] = Math.max(newBBX[3] + dy, newBBX[1] + minSize);\n      break;\n    case RectPointPosition.east:\n      newBBX[2] = Math.max(newBBX[2] + dx, newBBX[0] + minSize);\n      break;\n    case RectPointPosition.southeast:\n      newBBX[2] = Math.max(newBBX[2] + dx, newBBX[0] + minSize);\n      newBBX[3] = Math.max(newBBX[3] + dy, newBBX[1] + minSize);\n      break;\n    case RectPointPosition.southwest:\n      newBBX[0] = Math.min(newBBX[0] + dx, newBBX[2] - minSize);\n      newBBX[3] = Math.max(newBBX[3] + dy, newBBX[1] + minSize);\n      break;\n    case RectPointPosition.northeast:\n      newBBX[2] = Math.max(newBBX[2] + dx, newBBX[0] + minSize);\n      newBBX[1] = Math.min(newBBX[1] + dy, newBBX[3] - minSize);\n      break;\n    case RectPointPosition.northwest:\n      newBBX[0] = Math.min(newBBX[0] + dx, newBBX[2] - minSize);\n      newBBX[1] = Math.min(newBBX[1] + dy, newBBX[3] - minSize);\n      break;\n    default:\n      // exhaustive?\n      ((_x: never) => { })(position);\n  }\n  return resizeSelectedGlyphLines(glyph, selection, oldBBX, newBBX);\n};\n\nexport const draggedGlyphSelector = createSelector([\n  (state: AppState) => state.glyph,\n  (state: AppState) => state.selection,\n  (state: AppState) => state.dragSelection,\n  (state: AppState) => state.dragPoint,\n  (state: AppState) => state.resizeSelection,\n  (state: AppState) => state.freehandStroke,\n], (glyph, selection, dragSelection, dragPoint, resizeSelection, freehandStroke) => {\n  if (dragSelection) {\n    const [x1, y1, x2, y2] = dragSelection;\n    const dx = x2 - x1;\n    const dy = y2 - y1;\n    glyph = moveSelectedGlyphLines(glyph, selection, dx, dy);\n  } else if (dragPoint) {\n    const [pointIndex, [x1, y1, x2, y2]] = dragPoint;\n    const dx = x2 - x1;\n    const dy = y2 - y1;\n    glyph = moveSelectedPoint(glyph, selection, pointIndex, dx, dy);\n  } else if (resizeSelection) {\n    const [position, [x1, y1, x2, y2]] = resizeSelection;\n    const dx = x2 - x1;\n    const dy = y2 - y1;\n    glyph = resizeSelected(glyph, selection, position, dx, dy);\n  } else if (freehandStroke) {\n    glyph = drawFreehand(glyph, freehandStroke);\n  }\n  return glyph;\n});\n","import { ReducerBuilder } from 'typescript-fsa-reducers';\n\n// @ts-ignore\nimport { polygonInPolygon, polygonIntersectsPolygon } from 'geometric';\n\nimport { dragActions } from '../actions/drag';\n\nimport { Glyph } from '../kageUtils/glyph';\nimport { moveSelectedGlyphLines, moveSelectedPoint } from '../kageUtils/transform';\nimport { drawFreehand } from '../kageUtils/freehand';\nimport { makeGlyphSeparated, KShotai } from '../kage';\n\nimport { AppState } from '.';\nimport { resizeSelected } from '../selectors/draggedGlyph';\n\nconst performAreaSelect = (glyph: Glyph, buhinMap: Map<string, string>, shotai: KShotai, x1: number, y1: number, x2: number, y2: number): number[] => {\n  const polygonsSep = makeGlyphSeparated(glyph, buhinMap, shotai);\n  const result = [];\n\n  const gAreaPolygon: [number, number][] = [\n    [x1, y1],\n    [x1, y2],\n    [x2, y2],\n    [x2, y1],\n    [x1, y1],\n  ];\n\n  for (let index = 0; index < polygonsSep.length; index++) {\n    const polygons = polygonsSep[index];\n    if (polygons.array.some((polygon) => {\n      const gPolygon = polygon.array.map(({ x, y }) => [x, y]);\n      gPolygon.push(gPolygon[0]); // close polygon\n\n      return (\n        polygonInPolygon(gAreaPolygon, gPolygon) ||\n        polygonInPolygon(gPolygon, gAreaPolygon) ||\n        polygonIntersectsPolygon(gAreaPolygon, gPolygon)\n      ) as boolean;\n    })) {\n      result.push(index);\n    }\n  }\n  return result;\n};\n\nconst updateBuilder = (builder: ReducerBuilder<AppState>) => builder\n  .case(dragActions.startBackgroundDrag, (state, evt) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    const [x1, y1] = state.ctmInv(evt.clientX, evt.clientY);\n    if (state.freehandMode) {\n      return {\n        ...state,\n        freehandStroke: [[x1, y1]],\n      };\n    }\n    return {\n      ...state,\n      areaSelectRect: [x1, y1, x1, y1],\n    };\n  })\n  .case(dragActions.startSelectionDrag, (state, evt) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    const [x1, y1] = state.ctmInv(evt.clientX, evt.clientY);\n    return {\n      ...state,\n      dragSelection: [x1, y1, x1, y1],\n    };\n  })\n  .case(dragActions.startPointDrag, (state, [evt, pointIndex]) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    const [x1, y1] = state.ctmInv(evt.clientX, evt.clientY);\n    return {\n      ...state,\n      dragPoint: [pointIndex, [x1, y1, x1, y1]],\n    };\n  })\n  .case(dragActions.startResize, (state, [evt, position]) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    const [x1, y1] = state.ctmInv(evt.clientX, evt.clientY);\n    return {\n      ...state,\n      resizeSelection: [position, [x1, y1, x1, y1]],\n    };\n  })\n\n  .case(dragActions.mouseMove, (state, evt) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    if (state.areaSelectRect) {\n      const [x1, y1] = state.areaSelectRect;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      return {\n        ...state,\n        areaSelectRect: [x1, y1, x2, y2],\n      };\n    }\n    if (state.dragSelection) {\n      const [x1, y1] = state.dragSelection;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      return {\n        ...state,\n        dragSelection: [x1, y1, x2, y2],\n      };\n    }\n    if (state.dragPoint) {\n      const [pointIndex, [x1, y1]] = state.dragPoint;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      return {\n        ...state,\n        dragPoint: [pointIndex, [x1, y1, x2, y2]],\n      };\n    }\n    if (state.resizeSelection) {\n      const [position, [x1, y1]] = state.resizeSelection;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      return {\n        ...state,\n        resizeSelection: [position, [x1, y1, x2, y2]],\n      };\n    }\n    if (state.freehandStroke) {\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      let freehandStroke = state.freehandStroke.concat([[x2, y2]]);\n      if (freehandStroke.length >= 3) {\n        const [lastX, lastY] = freehandStroke[freehandStroke.length - 2];\n        if (Math.abs(x2 - lastX) < 2 && Math.abs(y2 - lastY) < 2) {\n          freehandStroke.splice(freehandStroke.length - 2, 1);\n        }\n      }\n      return {\n        ...state,\n        freehandStroke,\n      };\n    }\n    return state;\n  })\n  .case(dragActions.mouseUp, (state, evt) => {\n    if (!state.ctmInv) {\n      return state;\n    }\n    if (state.areaSelectRect) {\n      const [x1, y1] = state.areaSelectRect;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      const intersections = performAreaSelect(state.glyph, state.buhinMap, state.shotai, x1, y1, x2, y2);\n\n      const newSelection = Array.from(new Set(state.selection.concat(intersections)));\n      return {\n        ...state,\n        selection: newSelection,\n        areaSelectRect: null,\n      };\n    }\n    if (state.dragSelection) {\n      const [x1, y1] = state.dragSelection;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n\n      const newGlyph = moveSelectedGlyphLines(state.glyph, state.selection, x2 - x1, y2 - y1);\n      return {\n        ...state,\n        glyph: newGlyph,\n        dragSelection: null,\n      };\n    }\n    if (state.dragPoint) {\n      const [pointIndex, [x1, y1]] = state.dragPoint;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n\n      const newGlyph = moveSelectedPoint(state.glyph, state.selection, pointIndex, x2 - x1, y2 - y1);\n      return {\n        ...state,\n        glyph: newGlyph,\n        dragPoint: null,\n      };\n    }\n    if (state.resizeSelection) {\n      const [position, [x1, y1]] = state.resizeSelection;\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n\n      const newGlyph = resizeSelected(state.glyph, state.selection, position, x2 - x1, y2 - y1);\n      return {\n        ...state,\n        glyph: newGlyph,\n        resizeSelection: null,\n      };\n    }\n    if (state.freehandStroke) {\n      const [x2, y2] = state.ctmInv(evt.clientX, evt.clientY);\n      const freehandStroke = state.freehandStroke.concat([[x2, y2]]);\n\n      const newGlyph = drawFreehand(state.glyph, freehandStroke);\n      return {\n        ...state,\n        glyph: newGlyph,\n        freehandStroke: null,\n      };\n    }\n    return state;\n  })\n\n  .case(dragActions.updateCTMInv, (state, ctmInv) => ({\n    ...state,\n    ctmInv,\n  }));\n\n\nexport default updateBuilder;\n","import { GlyphLine } from './glyph';\n\nexport type StretchParam = [number, number, number, number];\nexport type StretchPositions = [number, number, number, number];\n\nexport const getStretchPositions = (glyphLine: GlyphLine): StretchPositions | null => {\n  if (glyphLine.value[0] !== 99) {\n    return null;\n  }\n  const sx = glyphLine.value[9];\n  const sy = glyphLine.value[10];\n  const tx = glyphLine.value[1];\n  const ty = glyphLine.value[2];\n  return [sx, sy, tx, ty];\n};\n\nexport const setStretchPositions = (glyphLine: GlyphLine, positions: StretchPositions): GlyphLine => {\n  if (glyphLine.value[0] !== 99) {\n    return glyphLine;\n  }\n  const [sx, sy, tx, ty] = positions;\n\n  const newValue = glyphLine.value.slice();\n  newValue[9] = Math.round(sx);\n  newValue[10] = Math.round(sy);\n  newValue[1] = Math.round(tx);\n  newValue[2] = Math.round(ty);\n  return { value: newValue, partName: glyphLine.partName };\n};\n\nexport const normalizeStretchPositions = (positions: StretchPositions): StretchPositions => {\n  let [sx, sy, tx, ty] = positions;\n  if (tx <= 100) {\n    tx += 200;\n    sx = sy = 0;\n  }\n  return [sx, sy, tx, ty];\n};\n\nexport const calcStretchPositions = (param: StretchParam, k: number): StretchPositions => {\n  const [x0, y0, x1, y1] = param;\n  return [\n    x0 - 100,\n    y0 - 100,\n    x0 + (x1 - x0) * k / 20 + 100,\n    y0 + (y1 - y0) * k / 20 - 100,\n  ];\n};\n\nconst clampStretchScalar = (k: number): number => Math.max(-10, Math.min(10, k));\n\nexport const calcStretchScalar = (param: StretchParam, positions: StretchPositions): number => {\n  const [x0, y0, x1, y1] = param;\n  if (x0 === x1 && y0 === y1) {\n    return 0;\n  }\n  const [sx, sy, tx, ty] = normalizeStretchPositions(positions);\n  if (sx === tx - 200 && sy === ty) {\n    return 0;\n  }\n  return clampStretchScalar(Math.round(\n    Math.abs(x0 - x1) > Math.abs(y0 - y1)\n      ? (tx - 100 - x0) / (x1 - x0) * 20\n      : (ty + 100 - y0) / (y1 - y0) * 20\n  )) || 0;\n}\n","import { getKage } from '../kage';\n\nimport { GlyphLine, parseGlyph, unparseGlyph, unparseGlyphLine, getNumColumns, Glyph } from './glyph';\nimport { getStretchPositions, normalizeStretchPositions, setStretchPositions } from './stretchparam';\nimport { applyGlyphLineOperation } from './transform';\n\nexport const decompose = (glyphLine: GlyphLine, buhinMap: Map<string, string>): GlyphLine[] => {\n  if (glyphLine.value[0] !== 99) {\n    return [glyphLine];\n  }\n  const buhinSource = buhinMap.get(glyphLine.partName!);\n  if (!buhinSource) {\n    return [glyphLine];\n  }\n\n  let failedBuhin = false;\n  const kage = getKage(buhinMap, () => {\n    failedBuhin = true;\n  });\n\n  const glyph = parseGlyph(buhinSource);\n\n  const strokesArray =\n    // @ts-ignore 2445\n    kage.getEachStrokes(\n      unparseGlyph(glyph)\n    );\n  const box =\n    // @ts-ignore 2445\n    kage.getBox(\n      strokesArray\n    );\n\n  const x1 = glyphLine.value[3];\n  const y1 = glyphLine.value[4];\n  const x2 = glyphLine.value[5];\n  const y2 = glyphLine.value[6];\n  const [sx, sy, tx, ty] = normalizeStretchPositions(getStretchPositions(glyphLine)!);\n  const isStretchEnabled = !(sx === tx - 200 && sy === ty);\n\n  if (isStretchEnabled && failedBuhin) {\n    // box may be incorrect\n    return [glyphLine];\n  }\n\n  return glyph.map((oldGlyphLine) => {\n    const tX = (x: number) => {\n      const stretchedX = isStretchEnabled\n        ? kage.stretch(tx - 200, sx, x, box.minX, box.maxX)\n        : x;\n      return Math.round(stretchedX / 200 * (x2 - x1) + x1);\n    };\n    const tY = (y: number) => {\n      const stretchedY = isStretchEnabled\n        ? kage.stretch(ty, sy, y, box.minY, box.maxY)\n        : y;\n      return Math.round(stretchedY / 200 * (y2 - y1) + y1);\n    };\n    const newGlyphLine = applyGlyphLineOperation(oldGlyphLine, tX, tY);\n\n    if (!(isStretchEnabled && newGlyphLine.value[0] === 99)) {\n      return newGlyphLine;\n    }\n\n    const [sx2, sy2, tx2, ty2] = normalizeStretchPositions(getStretchPositions(newGlyphLine)!);\n    if (!(sx2 === tx2 - 200 && sy2 === ty2)) {\n      // Cannot compose two stretches...\n      return newGlyphLine;\n    }\n\n    const px1 = newGlyphLine.value[3];\n    const py1 = newGlyphLine.value[4];\n    const px2 = newGlyphLine.value[5];\n    const py2 = newGlyphLine.value[6];\n\n    if (px1 === px2 || py1 === py2) {\n      return newGlyphLine;\n    }\n\n    const revX = (x: number) => (x - px1) / (px2 - px1) * 200;\n    const revY = (y: number) => (y - py1) / (py2 - py1) * 200;\n    return setStretchPositions(newGlyphLine, [\n      revX(sx + 100) - 100,\n      revY(sy + 100) - 100,\n      revX(tx - 100) + 100,\n      revY(ty + 100) - 100,\n    ]);\n  });\n};\n\nexport const decomposeDeep = (glyphLine: GlyphLine, buhinMap: Map<string, string>): GlyphLine[] => {\n  const kage = getKage(buhinMap);\n  const strokesArray =\n    // @ts-ignore 2445\n    kage.getEachStrokes(\n      unparseGlyphLine(glyphLine)\n    );\n  return strokesArray.map((stroke): GlyphLine => {\n    const columns = getNumColumns(stroke.a1);\n    return {\n      value: [\n        stroke.a1,\n        stroke.a2_100 + stroke.kirikuchiAdjustment * 100 + stroke.tateAdjustment * 1000,\n        stroke.a3_100 + stroke.opt3 * 100 + stroke.mageAdjustment * 1000,\n        Math.round(stroke.x1) || 0,\n        Math.round(stroke.y1) || 0,\n        Math.round(stroke.x2) || 0,\n        Math.round(stroke.y2) || 0,\n        Math.round(stroke.x3) || 0,\n        Math.round(stroke.y3) || 0,\n        Math.round(stroke.x4) || 0,\n        Math.round(stroke.y4) || 0,\n      ].slice(0, columns),\n    };\n  });\n};\n\nexport const decomposeDeepGlyph = (glyph: Glyph, buhinMap: Map<string, string>): GlyphLine[] => {\n  return glyph.map((glyphLine) => decomposeDeep(glyphLine, buhinMap)).reduce((a, b) => a.concat(b), []);\n};\n","import memoizeOne from 'memoize-one';\n\nimport { GlyphLine, getNumColumns } from './glyph';\n\nexport const strokeTypes = [1, 2, 3, 4, 6, 7];\n\nexport const headShapeTypes: Record<number, number[]> = {\n  1: [0, 2, 32, 12, 22],\n  2: [0, 32, 12, 22, 7, 27],\n  3: [0, 32, 12, 22],\n  4: [0, 22],\n  6: [0, 32, 12, 22, 7, 27],\n  7: [0, 32, 12, 22],\n};\n\nexport const tailShapeTypes: Record<number, number[]> = {\n  1: [0, 2, 32, 13, 23, 4, 313, 413, 24],\n  2: [7, 0, 8, 4, 5],\n  3: [0, 5],\n  4: [0, 5],\n  6: [7, 0, 8, 4, 5],\n  7: [7],\n};\n\nexport const changeStrokeType = (glyphLine: GlyphLine, newType: number): GlyphLine => {\n  const oldType = glyphLine.value[0];\n  if (!strokeTypes.includes(oldType) || !strokeTypes.includes(newType)) {\n    return glyphLine;\n  }\n  const newGlyphLine: GlyphLine = {\n    value: glyphLine.value.slice(),\n  };\n\n  newGlyphLine.value[0] = newType;\n\n  if (!headShapeTypes[newType].includes(newGlyphLine.value[1])) {\n    newGlyphLine.value[1] = headShapeTypes[newType][0];\n  }\n  if (!tailShapeTypes[newType].includes(newGlyphLine.value[2])) {\n    newGlyphLine.value[2] = tailShapeTypes[newType][0];\n  }\n\n  const oldNumPoints = (getNumColumns(oldType) - 3) / 2;\n  const newNumPoints = (getNumColumns(newType) - 3) / 2;\n  if (oldNumPoints === newNumPoints) {\n    return newGlyphLine;\n  }\n  if (oldNumPoints === 2 && newNumPoints === 3) {\n    const x1 = newGlyphLine.value[3];\n    const y1 = newGlyphLine.value[4];\n    const x3 = newGlyphLine.value[5];\n    const y3 = newGlyphLine.value[6];\n\n    const x2 = Math.round((x1 + x3) / 2);\n    const y2 = Math.round((y1 + y3) / 2);\n    newGlyphLine.value = newGlyphLine.value.slice(0, 3).concat(\n      [x1, y1, x2, y2, x3, y3]\n    );\n    return newGlyphLine;\n  }\n  if (oldNumPoints === 2 && newNumPoints === 4) {\n    const x1 = newGlyphLine.value[3];\n    const y1 = newGlyphLine.value[4];\n    const x4 = newGlyphLine.value[5];\n    const y4 = newGlyphLine.value[6];\n\n    const x2 = Math.round((2 * x1 + x4) / 3);\n    const y2 = Math.round((2 * y1 + y4) / 3);\n    const x3 = Math.round((x1 + 2 * x4) / 3);\n    const y3 = Math.round((y1 + 2 * y4) / 3);\n    newGlyphLine.value = newGlyphLine.value.slice(0, 3).concat(\n      [x1, y1, x2, y2, x3, y3, x4, y4]\n    );\n    return newGlyphLine;\n  }\n  if (oldNumPoints === 3 && newNumPoints === 2) {\n    const x1 = newGlyphLine.value[3];\n    const y1 = newGlyphLine.value[4];\n    const x2 = newGlyphLine.value[7];\n    const y2 = newGlyphLine.value[8];\n    newGlyphLine.value = newGlyphLine.value.slice(0, 3).concat(\n      [x1, y1, x2, y2]\n    );\n    return newGlyphLine;\n  }\n  if (oldNumPoints === 3 && newNumPoints === 4) {\n    const x1 = newGlyphLine.value[3];\n    const y1 = newGlyphLine.value[4];\n    const xm = newGlyphLine.value[5];\n    const ym = newGlyphLine.value[6];\n    const x4 = newGlyphLine.value[7];\n    const y4 = newGlyphLine.value[8];\n\n    const x2 = Math.round((x1 + 2 * xm) / 3);\n    const y2 = Math.round((y1 + 2 * ym) / 3);\n    const x3 = Math.round((x4 + 2 * xm) / 3);\n    const y3 = Math.round((y4 + 2 * ym) / 3);\n    newGlyphLine.value = newGlyphLine.value.slice(0, 3).concat(\n      [x1, y1, x2, y2, x3, y3, x4, y4]\n    );\n    return newGlyphLine;\n  }\n  if (oldNumPoints === 4 && newNumPoints === 2) {\n    const x1 = newGlyphLine.value[3];\n    const y1 = newGlyphLine.value[4];\n    const x2 = newGlyphLine.value[9];\n    const y2 = newGlyphLine.value[10];\n    newGlyphLine.value = newGlyphLine.value.slice(0, 3).concat(\n      [x1, y1, x2, y2]\n    );\n    return newGlyphLine;\n  }\n  if (oldNumPoints === 4 && newNumPoints === 3) {\n    const x1 = newGlyphLine.value[3];\n    const y1 = newGlyphLine.value[4];\n    const xm1 = newGlyphLine.value[5];\n    const ym1 = newGlyphLine.value[6];\n    const xm2 = newGlyphLine.value[7];\n    const ym2 = newGlyphLine.value[8];\n    const x3 = newGlyphLine.value[9];\n    const y3 = newGlyphLine.value[10];\n\n    const x2 = Math.round((xm1 + xm2) / 2);\n    const y2 = Math.round((ym1 + ym2) / 2);\n    newGlyphLine.value = newGlyphLine.value.slice(0, 3).concat(\n      [x1, y1, x2, y2, x3, y3]\n    );\n    return newGlyphLine;\n  }\n  return newGlyphLine;\n};\n\nconst validStrokeShapeTypes: [number, number, number][] = [\n  [1, 0, 0],\n  [1, 0, 2],\n  [1, 0, 32],\n  [1, 0, 13],\n  [1, 0, 23],\n  [1, 0, 4],\n  [1, 0, 313],\n  [1, 0, 413],\n  [1, 0, 24],\n  [1, 2, 0],\n  [1, 2, 2],\n  [1, 32, 0],\n  [1, 32, 32],\n  [1, 32, 13],\n  [1, 32, 23],\n  [1, 32, 4],\n  [1, 32, 313],\n  [1, 32, 413],\n  [1, 32, 24],\n  [1, 12, 0],\n  [1, 12, 32],\n  [1, 12, 13],\n  [1, 12, 23],\n  [1, 12, 313],\n  [1, 12, 413],\n  [1, 12, 24],\n  [1, 22, 0],\n  [1, 22, 32],\n  [1, 22, 13],\n  [1, 22, 23],\n  [1, 22, 4],\n  [1, 22, 313],\n  [1, 22, 413],\n  [1, 22, 24],\n  [2, 0, 7],\n  [2, 0, 5],\n  [2, 32, 7],\n  [2, 32, 4],\n  [2, 32, 5],\n  [2, 12, 7],\n  [2, 22, 7],\n  [2, 22, 4],\n  [2, 22, 5],\n  [2, 7, 0],\n  [2, 7, 8],\n  [2, 7, 4],\n  [2, 27, 0],\n  [3, 0, 0],\n  [3, 0, 5],\n  [3, 32, 0],\n  [3, 32, 5],\n  [3, 12, 0],\n  [3, 12, 5],\n  [3, 22, 0],\n  [3, 22, 5],\n  [4, 0, 0],\n  [4, 0, 5],\n  [4, 22, 0],\n  [4, 22, 5],\n  [6, 0, 7],\n  [6, 0, 5],\n  [6, 32, 7],\n  [6, 32, 4],\n  [6, 32, 5],\n  [6, 12, 7],\n  [6, 22, 7],\n  [6, 22, 4],\n  [6, 22, 5],\n  [6, 7, 0],\n  [6, 7, 8],\n  [6, 7, 4],\n  [6, 27, 0],\n  [7, 0, 7],\n  [7, 32, 7],\n  [7, 12, 7],\n  [7, 22, 7],\n];\n\nexport const isValidStrokeShapeTypes = memoizeOne((stroke: GlyphLine) => {\n  if (!strokeTypes.includes(stroke.value[0])) {\n    return true;\n  }\n\n  if (!validStrokeShapeTypes.some(([s0, s1, s2]) => (\n    s0 === stroke.value[0] &&\n    s1 === stroke.value[1] &&\n    s2 === stroke.value[2]\n  ))) {\n    return false;\n  }\n\n  if (stroke.value[0] === 1) {\n    const [, s1, s2, x1, y1, x2, y2] = stroke.value;\n    const isVertical = y1 === y2 ? x1 === x2 : x2 - x1 <= Math.abs(y1 - y2);\n\n    if (isVertical\n      ? (s1 === 2 || s2 === 2)\n      : !([0, 2].includes(s1) && [0, 2].includes(s2))\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n});\n","import React, { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport ReactModal from 'react-modal';\nimport { useTranslation } from 'react-i18next';\n\nimport { displayActions } from '../actions/display';\nimport { AppState } from '../reducers';\nimport { KShotai } from '../kage';\nimport { XorMaskType, xorMaskTypes } from '../xorMask';\n\nimport './OptionModal.css';\n\nexport enum showCenterLine {\n  none,\n  selection,\n  always,\n}\n\nconst OptionModal = () => {\n  const showOptionModal = useSelector((state: AppState) => state.showOptionModal);\n  const grid = useSelector((state: AppState) => state.grid);\n  const shotai = useSelector((state: AppState) => state.shotai);\n  const xorMaskType = useSelector((state: AppState) => state.xorMaskType);\n  const showStrokeCenterLine = useSelector((state: AppState) => state.showStrokeCenterLine);\n\n  const dispatch = useDispatch();\n  const handleRequestClose = useCallback(() => {\n    dispatch(displayActions.closeOptionModal());\n  }, [dispatch]);\n\n  const handleGridDisplayChange = useCallback((evt: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(displayActions.setGridDisplay(evt.currentTarget.checked));\n  }, [dispatch]);\n  const handleGridOriginXChange = useCallback((evt: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(displayActions.setGridOriginX(evt.currentTarget.valueAsNumber));\n  }, [dispatch]);\n  const handleGridOriginYChange = useCallback((evt: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(displayActions.setGridOriginY(evt.currentTarget.valueAsNumber));\n  }, [dispatch]);\n  const handleGridSpacingXChange = useCallback((evt: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(displayActions.setGridSpacingX(evt.currentTarget.valueAsNumber));\n  }, [dispatch]);\n  const handleGridSpacingYChange = useCallback((evt: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(displayActions.setGridSpacingY(evt.currentTarget.valueAsNumber));\n  }, [dispatch]);\n  const handleShotaiChange = useCallback((evt: React.ChangeEvent<HTMLSelectElement>) => {\n    dispatch(displayActions.setShotai(+evt.currentTarget.value as KShotai));\n  }, [dispatch]);\n  const handleStrokeCenterLineChange = useCallback((evt: React.ChangeEvent<HTMLSelectElement>) => {\n    dispatch(displayActions.setStrokeCenterLineDisplay(+evt.currentTarget.value as showCenterLine));\n  }, [dispatch]);\n  const handleXorMaskTypeChange = useCallback((evt: React.ChangeEvent<HTMLSelectElement>) => {\n    dispatch(displayActions.setXorMaskType(evt.currentTarget.value as XorMaskType));\n  }, [dispatch]);\n  \n  const { t, i18n } = useTranslation();\n  const handleLanguageChange = useCallback((evt: React.ChangeEvent<HTMLSelectElement>) => {\n    i18n.changeLanguage(evt.currentTarget.value);\n  }, [i18n]);\n\n  return (\n    <ReactModal\n      isOpen={showOptionModal}\n      onRequestClose={handleRequestClose}\n      shouldCloseOnEsc={false} // handled by hotkeys-js\n      className={'modal-content'}\n    >\n      <fieldset>\n        <legend>{t('grid option')}</legend>\n        <div className=\"enable-grid\">\n          <label>\n            <input type=\"checkbox\" checked={grid.display} onChange={handleGridDisplayChange} />\n            {t('enable grid')}\n          </label>\n        </div>\n        <div className=\"grid-option\">\n          <div>{t('grid origin x')}</div> <input\n            type=\"number\"\n            value={grid.originX}\n            min={0}\n            max={200}\n            onChange={handleGridOriginXChange}\n            disabled={!grid.display}\n          />\n          {' '}\n          <div>{t('grid origin y')}</div> <input\n            type=\"number\"\n            value={grid.originY}\n            min={0}\n            max={200}\n            onChange={handleGridOriginYChange}\n            disabled={!grid.display}\n          />\n          <div>{t('grid spacing x')}</div> <input\n            type=\"number\"\n            value={grid.spacingX}\n            min={2}\n            max={200}\n            onChange={handleGridSpacingXChange}\n            disabled={!grid.display}\n          />\n          {' '}\n          <div>{t('grid spacing y')}</div> <input\n            type=\"number\"\n            value={grid.spacingY}\n            min={2}\n            max={200}\n            onChange={handleGridSpacingYChange}\n            disabled={!grid.display}\n          />\n        </div>\n      </fieldset>\n      <div className=\"general-option\">\n        <div>{t('glyph font style')}</div> <select\n          value={shotai}\n          onChange={handleShotaiChange}\n        >\n          <option value={0}>{t('mincho style')}</option>\n          <option value={1}>{t('gothic style')}</option>\n        </select>\n        <div>{t('show stroke center line')}</div> <select\n          value={showStrokeCenterLine}\n          onChange={handleStrokeCenterLineChange}\n        >\n          <option value={0}>{t('show stroke center line none')}</option>\n          <option value={1}>{t('show stroke center line selection')}</option>\n          <option value={2}>{t('show stroke center line always')}</option>\n        </select>\n        <div>{t('negative mask type')}</div> <select\n          value={xorMaskType}\n          onChange={handleXorMaskTypeChange}\n        >\n          {xorMaskTypes.map((maskType) => (\n            <option key={maskType} value={maskType}>{t(`negative mask type ${maskType}`)}</option>\n          ))}\n        </select>\n        <div>{t('display language')}</div> <select\n          value={i18n.language}\n          onChange={handleLanguageChange}\n        >\n          <option value=\"ja\">日本語</option>\n          <option value=\"en\">English</option>\n          <option value=\"ko\">한국어</option>\n          <option value=\"zh-Hans\">简体中文</option>\n          <option value=\"zh-Hant\">繁體中文</option>\n        </select>\n      </div>\n      <div className=\"close-option\">\n        <button onClick={handleRequestClose}>{t('close modal')}</button>\n      </div>\n    </ReactModal>\n  )\n};\n\nif (process.env.NODE_ENV !== 'test') {\n  ReactModal.setAppElement('#root');\n}\n\nexport default OptionModal;\n","import { ReducerBuilder } from 'typescript-fsa-reducers';\n\nimport { editorActions } from '../actions/editor';\n\nimport { Glyph, GlyphLine } from '../kageUtils/glyph';\nimport { getGlyphLinesBBX } from '../kageUtils/bbx';\nimport { decompose } from '../kageUtils/decompose';\nimport { calcStretchPositions, setStretchPositions } from '../kageUtils/stretchparam';\nimport { changeStrokeType } from '../kageUtils/stroketype';\nimport { reflectRotateTypeParamsMap } from '../kageUtils/reflectrotate';\nimport { applyGlyphLineOperation, moveSelectedGlyphLines } from '../kageUtils/transform';\n\nimport { AppState } from '.';\n\nconst setGlyphLine = (glyph: Glyph, index: number, glyphLine: GlyphLine): Glyph => {\n  const newGlyph = glyph.slice();\n  newGlyph[index] = glyphLine;\n  return newGlyph;\n};\n\nconst updateBuilder = (builder: ReducerBuilder<AppState>) => builder\n  .case(editorActions.loadedBuhin, (state, [name, data]) => {\n    const newMap = new Map(state.buhinMap);\n    newMap.set(name, data);\n    return {\n      ...state,\n      buhinMap: newMap,\n    };\n  })\n  .case(editorActions.loadedStretchParam, (state, [name, param]) => {\n    const newMap = new Map(state.stretchParamMap);\n    newMap.set(name, param);\n    return {\n      ...state,\n      stretchParamMap: newMap,\n    };\n  })\n\n  .case(editorActions.changeStrokeType, (state, newType) => {\n    if (state.selection.length !== 1) {\n      return state;\n    }\n    const lineIndex = state.selection[0];\n    const newGLine = changeStrokeType(state.glyph[lineIndex], newType);\n    return {\n      ...state,\n      glyph: setGlyphLine(state.glyph, lineIndex, newGLine),\n    };\n  })\n  .case(editorActions.changeHeadShapeType, (state, newType) => {\n    if (state.selection.length !== 1) {\n      return state;\n    }\n    const lineIndex = state.selection[0];\n    const newGLine: GlyphLine = {\n      ...state.glyph[lineIndex],\n      value: state.glyph[lineIndex].value.slice(),\n    };\n    newGLine.value[1] = newType;\n    return {\n      ...state,\n      glyph: setGlyphLine(state.glyph, lineIndex, newGLine),\n    };\n  })\n  .case(editorActions.changeTailShapeType, (state, newType) => {\n    if (state.selection.length !== 1) {\n      return state;\n    }\n    const lineIndex = state.selection[0];\n    const newGLine: GlyphLine = {\n      ...state.glyph[lineIndex],\n      value: state.glyph[lineIndex].value.slice(),\n    };\n    newGLine.value[2] = newType;\n    return {\n      ...state,\n      glyph: setGlyphLine(state.glyph, lineIndex, newGLine),\n    };\n  })\n  .case(editorActions.changeStretchCoeff, (state, value) => {\n    if (state.selection.length !== 1) {\n      return state;\n    }\n    const lineIndex = state.selection[0];\n    const selectedLine = state.glyph[lineIndex];\n    if (!selectedLine.partName) {\n      return state;\n    }\n    const stretchParam = state.stretchParamMap.get(selectedLine.partName);\n    if (!stretchParam) {\n      return state;\n    }\n    const newGLine = setStretchPositions(\n      state.glyph[lineIndex],\n      calcStretchPositions(stretchParam, value)\n    );\n    return {\n      ...state,\n      glyph: setGlyphLine(state.glyph, lineIndex, newGLine),\n    };\n  })\n  .case(editorActions.changeReflectRotateOpType, (state, opType) => {\n    if (state.selection.length !== 1) {\n      return state;\n    }\n    const lineIndex = state.selection[0];\n    const newGLine: GlyphLine = {\n      ...state.glyph[lineIndex],\n      value: state.glyph[lineIndex].value.slice(),\n    };\n    const params = reflectRotateTypeParamsMap[opType]\n    if (!params) {\n      return state;\n    }\n    newGLine.value[1] = params[0];\n    newGLine.value[2] = params[1];\n    return {\n      ...state,\n      glyph: setGlyphLine(state.glyph, lineIndex, newGLine),\n    };\n  })\n\n  .case(editorActions.swapWithPrev, (state) => {\n    if (state.selection.length !== 1) {\n      return state;\n    }\n    const lineIndex = state.selection[0];\n    if (lineIndex === 0) {\n      return state;\n    }\n    const newGlyph = state.glyph.slice();\n    newGlyph[lineIndex - 1] = state.glyph[lineIndex];\n    newGlyph[lineIndex] = state.glyph[lineIndex - 1];\n    return {\n      ...state,\n      glyph: newGlyph,\n      selection: [lineIndex - 1],\n    };\n  })\n  .case(editorActions.swapWithNext, (state) => {\n    if (state.selection.length !== 1) {\n      return state;\n    }\n    const lineIndex = state.selection[0];\n    if (lineIndex === state.glyph.length - 1) {\n      return state;\n    }\n    const newGlyph = state.glyph.slice();\n    newGlyph[lineIndex + 1] = state.glyph[lineIndex];\n    newGlyph[lineIndex] = state.glyph[lineIndex + 1];\n    return {\n      ...state,\n      glyph: newGlyph,\n      selection: [lineIndex + 1],\n    };\n  })\n\n  .case(editorActions.insertPart, (state, partName) => ({\n    ...state,\n    glyph: state.glyph.concat([{\n      value: [99, 0, 0, 0, 0, 200, 200, 0, 0, 0, 0],\n      partName,\n    }]),\n    selection: [state.glyph.length],\n  }))\n\n  .case(editorActions.paste, (state) => ({\n    ...state,\n    glyph: state.glyph.concat(state.clipboard),\n    selection: state.clipboard.map((_gLine, index) => state.glyph.length + index),\n  }))\n  .case(editorActions.copy, (state) => {\n    const targetLines = state.selection.map((index) => state.glyph[index]);\n    const [x1, y1] = getGlyphLinesBBX(targetLines);\n    const tX = (x: number) => 230 + x - x1;\n    const tY = (y: number) => 20 + y - y1;\n    return {\n      ...state,\n      clipboard: state.selection.map((index) => (\n        applyGlyphLineOperation(state.glyph[index], tX, tY)\n      )),\n    };\n  })\n  .case(editorActions.cut, (state) => ({\n    ...state,\n    glyph: state.glyph.filter((_gLine, index) => !state.selection.includes(index)),\n    clipboard: state.selection.map((index) => state.glyph[index]),\n    selection: [],\n  }))\n  .case(editorActions.delete, (state) => ({\n    ...state,\n    glyph: state.glyph.filter((_gLine, index) => !state.selection.includes(index)),\n    selection: [],\n  }))\n\n  .case(editorActions.decomposeSelected, (state) => {\n    let newGlyph: Glyph = [];\n    let newSelection: number[] = [];\n    state.glyph.forEach((gLine, index) => {\n      if (!state.selection.includes(index)) {\n        newGlyph.push(gLine);\n        return;\n      }\n      const newLines = decompose(gLine, state.buhinMap);\n      newSelection = newSelection.concat(\n        newLines.map((_gLine, subindex) => newGlyph.length + subindex)\n      );\n      newGlyph = newGlyph.concat(newLines);\n    });\n    return {\n      ...state,\n      glyph: newGlyph,\n      selection: newSelection,\n    };\n  })\n  .case(editorActions.moveSelected, (state, [dx, dy]) => ({\n    ...state,\n    glyph: moveSelectedGlyphLines(state.glyph, state.selection, dx, dy),\n  }))\n\n  .case(editorActions.toggleFreehand, (state) => ({\n    ...state,\n    selection: state.freehandMode ? state.selection : [],\n    freehandMode: !state.freehandMode,\n  }))\n\n  .case(editorActions.escape, (state) => {\n    if (state.showOptionModal) {\n      return {\n        ...state,\n        showOptionModal: false,\n      }\n    }\n    if (state.freehandMode) {\n      return {\n        ...state,\n        freehandMode: false,\n      };\n    }\n    if (state.selection.length) {\n      return {\n        ...state,\n        selection: [],\n      };\n    }\n    return state;\n  })\n\n  .case(editorActions.finishEdit, (state, evt) => ({\n    ...state,\n    exitEvent: evt,\n  }));\n\n\nexport default updateBuilder;\n","import actionCreatorFactory from 'typescript-fsa';\n\nimport { KShotai } from '../kage';\nimport { showCenterLine } from '../components/OptionModal';\nimport { XorMaskType } from '../xorMask';\n\nconst actionCreator = actionCreatorFactory('DISPLAY');\n\nexport const displayActions = {\n  openOptionModal: actionCreator('OPEN_OPTION_MODAL'),\n  closeOptionModal: actionCreator('CLOSE_OPTION_MODAL'),\n\n  setGridDisplay: actionCreator<boolean>('SET_GRID_DISPLAY'),\n  setGridOriginX: actionCreator<number>('SET_GRID_ORIGIN_X'),\n  setGridOriginY: actionCreator<number>('SET_GRID_ORIGIN_Y'),\n  setGridSpacingX: actionCreator<number>('SET_GRID_SPACING_X'),\n  setGridSpacingY: actionCreator<number>('SET_GRID_SPACING_Y'),\n\n  setShotai: actionCreator<KShotai>('SET_SHOTAI'),\n  setStrokeCenterLineDisplay: actionCreator<showCenterLine>('SET_STROKE_CENTER_LINE_DISPLAY'),\n\n  setXorMaskType: actionCreator<XorMaskType>('SET_XOR_MASK_TYPE'),\n};\n","import { ReducerBuilder } from 'typescript-fsa-reducers';\n\nimport { displayActions } from '../actions/display';\n\nimport { AppState } from '.';\n\nexport interface GridState {\n  display: boolean;\n  originX: number;\n  originY: number;\n  spacingX: number;\n  spacingY: number;\n}\n\nconst updateBuilder = (builder: ReducerBuilder<AppState>) => builder\n  .case(displayActions.openOptionModal, (state) => ({\n    ...state,\n    showOptionModal: true,\n  }))\n  .case(displayActions.closeOptionModal, (state) => ({\n    ...state,\n    showOptionModal: false,\n  }))\n\n  .case(displayActions.setGridDisplay, (state, value) => ({\n    ...state,\n    grid: {\n      ...state.grid,\n      display: value,\n    },\n  }))\n  .case(displayActions.setGridOriginX, (state, value) => ({\n    ...state,\n    grid: {\n      ...state.grid,\n      originX: value,\n    },\n  }))\n  .case(displayActions.setGridOriginY, (state, value) => ({\n    ...state,\n    grid: {\n      ...state.grid,\n      originY: value,\n    },\n  }))\n  .case(displayActions.setGridSpacingX, (state, value) => ({\n    ...state,\n    grid: {\n      ...state.grid,\n      spacingX: Math.max(2, value),\n    },\n  }))\n  .case(displayActions.setGridSpacingY, (state, value) => ({\n    ...state,\n    grid: {\n      ...state.grid,\n      spacingY: Math.max(2, value),\n    },\n  }))\n\n  .case(displayActions.setStrokeCenterLineDisplay, (state, value) => ({\n    ...state,\n    showStrokeCenterLine: value,\n  }))\n  .case(displayActions.setShotai, (state, shotai) => ({\n    ...state,\n    shotai,\n  }))\n  \n  .case(displayActions.setXorMaskType, (state, xorMaskType) => ({\n    ...state,\n    xorMaskType,\n  }));\n\n\nexport default updateBuilder;\n","import actionCreatorFactory from 'typescript-fsa';\n\nconst actionCreator = actionCreatorFactory('UNDO');\n\nexport const undoActions = {\n  undo: actionCreator('UNDO'),\n  redo: actionCreator('REDO'),\n};\n","import { reducerWithInitialState } from 'typescript-fsa-reducers';\n\nimport { RectPointPosition, CTMInv } from '../actions/drag';\n\nimport { GlyphLine, Glyph, parseGlyph } from '../kageUtils/glyph';\nimport { StretchParam } from '../kageUtils/stretchparam';\nimport args from '../args';\nimport { KShotai } from '../kage';\nimport { showCenterLine } from '../components/OptionModal';\n\nimport select from './select';\nimport drag from './drag';\nimport editor from './editor';\nimport display, { GridState } from './display';\n\nimport { undoable } from './undo';\nimport { XorMaskType } from '../xorMask';\n\nexport interface AppState {\n  glyph: Glyph;\n  selection: number[];\n\n  areaSelectRect: [number, number, number, number] | null;\n  dragSelection: [number, number, number, number] | null;\n  dragPoint: [number, [number, number, number, number]] | null;\n  resizeSelection: [RectPointPosition, [number, number, number, number]] | null;\n  freehandStroke: [number, number][] | null;\n  ctmInv: CTMInv | null;\n  freehandMode: boolean;\n\n  buhinMap: Map<string, string>;\n  stretchParamMap: Map<string, StretchParam>;\n  clipboard: GlyphLine[];\n  undoStacks: {\n    undo: Glyph[];\n    redo: Glyph[];\n  };\n  exitEvent: Event | null;\n\n  showOptionModal: boolean;\n  grid: GridState;\n  showStrokeCenterLine: showCenterLine;\n  shotai: KShotai;\n  xorMaskType: XorMaskType;\n}\n\nconst initialState: AppState = {\n  glyph: parseGlyph(args.data),\n  selection: [],\n\n  areaSelectRect: null,\n  dragSelection: null,\n  dragPoint: null,\n  resizeSelection: null,\n  freehandStroke: null,\n  ctmInv: null,\n  freehandMode: false,\n\n  buhinMap: new Map<string, string>(),\n  stretchParamMap: new Map<string, StretchParam>(),\n  clipboard: [],\n  undoStacks: { undo: [], redo: [] },\n  exitEvent: null,\n\n  showOptionModal: false,\n  grid: {\n    display: true,\n    originX: 0,\n    originY: 0,\n    spacingX: 20,\n    spacingY: 20,\n  },\n  showStrokeCenterLine: 1, // selection\n  shotai: 0, // kMincho\n  xorMaskType: \"none\",\n};\n\nconst reducer = undoable(\n  reducerWithInitialState(initialState)\n    .withHandling(select)\n    .withHandling(drag)\n    .withHandling(editor)\n    .withHandling(display)\n);\n\nexport default reducer;\n","import { Reducer } from 'redux';\nimport { reducerWithInitialState } from 'typescript-fsa-reducers';\n\nimport { isGlyphDeepEqual } from '../kageUtils/glyph';\n\nimport { undoActions } from '../actions/undo';\n\nimport { AppState } from '.';\n\nconst UNDO_MAX_TIMES = 30;\n\nconst pushUndo = (oldState: AppState, newState: AppState): AppState => {\n  if (isGlyphDeepEqual(oldState.glyph, newState.glyph)) {\n    return newState;\n  }\n  return {\n    ...newState,\n    undoStacks: {\n      undo: oldState.undoStacks.undo.concat([oldState.glyph]).slice(-UNDO_MAX_TIMES),\n      redo: [],\n    },\n  };\n};\n\nexport const undoable = (reducer: Reducer<AppState>): Reducer<AppState> => {\n  const initialState = reducer(undefined, { type: '_INIT' });\n  return reducerWithInitialState(initialState)\n    .case(undoActions.undo, (state) => {\n      if (state.undoStacks.undo.length === 0) {\n        return state;\n      }\n      return {\n        ...state,\n        glyph: state.undoStacks.undo[state.undoStacks.undo.length - 1],\n        selection: [], // TODO: select changed lines?\n        undoStacks: {\n          undo: state.undoStacks.undo.slice(0, -1),\n          redo: state.undoStacks.redo.concat([state.glyph]),\n        },\n      };\n    })\n    .case(undoActions.redo, (state) => {\n      if (state.undoStacks.redo.length === 0) {\n        return state;\n      }\n      return {\n        ...state,\n        glyph: state.undoStacks.redo[state.undoStacks.redo.length - 1],\n        selection: [], // TODO: select changed lines?\n        undoStacks: {\n          undo: state.undoStacks.undo.concat([state.glyph]),\n          redo: state.undoStacks.redo.slice(0, -1),\n        },\n      };\n    })\n    .default((oldState, action) => {\n      const newState = reducer(oldState, action);\n      if (!oldState) {\n        return newState;\n      }\n      return pushUndo(oldState, newState);\n    });\n};\n","import { createStore } from 'redux';\n\nimport reducer from './reducers';\n\nconst store = createStore(reducer);\n\nexport default store;\n","export const xorMaskShapeMap = {\n  none: \"\",\n  circle: \"M 123.2 13.4 137.9 18.8 151.5 26.6 163.5 36.7 173.5 48.7 181.3 62.2 186.7 76.9 189.4 92.4 189.4 108 186.7 123.4 181.3 138.1 173.5 151.7 163.5 163.7 151.5 173.7 137.9 181.6 123.2 186.9 107.8 189.6 92.1 189.6 76.7 186.9 62 181.6 48.4 173.7 36.4 163.7 26.4 151.7 18.6 138.1 13.2 123.4 10.5 108 10.5 92.4 13.2 76.9 18.6 62.2 26.4 48.7 36.4 36.7 48.4 26.6 62 18.8 76.7 13.4 92.1 10.7 107.8 10.7 Z\",\n  squareWithRoundedCorners: \"M 176.9 15.1 178.8 15.7 180.5 16.6 182 17.9 183.3 19.4 184.2 21.1 184.8 23 185 25 185 175 184.8 176.9 184.2 178.8 183.3 180.5 182 182 180.5 183.3 178.8 184.2 176.9 184.8 175 185 25 185 23 184.8 21.1 184.2 19.4 183.3 17.9 182 16.6 180.5 15.7 178.8 15.1 176.9 15 175 15 25 15.1 23 15.7 21.1 16.6 19.4 17.9 17.9 19.4 16.6 21.1 15.7 23 15.1 25 15 175 15 Z\",\n  square: \"M 185 185 15 185 15 15 185 15 Z\",\n  diamond: \"M 190 100 100 190 10 100 100 10 Z\"\n}\n\nexport type XorMaskType = keyof typeof xorMaskShapeMap;\nexport const xorMaskTypes = Object.keys(xorMaskShapeMap) as XorMaskType[];\n","import { Glyph, PointDescriptor, getNumColumns } from './glyph';\n\nexport enum MatchType {\n  none,\n  online,\n  match,\n}\n\nexport const getMatchType = (glyph: Glyph, point: PointDescriptor): MatchType => {\n  const glyphLine = glyph[point.lineIndex];\n\n  const endPointIndex = (getNumColumns(glyphLine.value[0]) - 3) / 2 - 1;\n  if (point.pointIndex !== 0 && point.pointIndex !== endPointIndex) {\n    return MatchType.none;\n  }\n\n  const x = glyphLine.value[3 + point.pointIndex * 2];\n  const y = glyphLine.value[3 + point.pointIndex * 2 + 1];\n  const isOnline = (x1: number, y1: number, x2: number, y2: number): boolean => (\n    (\n      x1 === x2 && // 垂直\n      x1 === x && y1 <= y && y <= y2\n    ) || (\n      y1 === y2 && // 水平\n      y1 === y && x1 <= x && x <= x2\n    )\n  );\n\n  let result = MatchType.none;\n  for (let lineIndex = 0; lineIndex < glyph.length; lineIndex++) {\n    if (point.lineIndex === lineIndex) {\n      continue;\n    }\n    const glyphLine = glyph[lineIndex];\n    if ([0, 9, 99].includes(glyphLine.value[0])) {\n      continue;\n    }\n\n    if (glyphLine.value[3] === x && glyphLine.value[4] === y) {\n      return MatchType.match;\n    }\n    const endPointIndex = (getNumColumns(glyphLine.value[0]) - 3) / 2 - 1;\n    if (\n      glyphLine.value[3 + endPointIndex * 2] === x &&\n      glyphLine.value[3 + endPointIndex * 2 + 1] === y\n    ) {\n      return MatchType.match;\n    }\n\n    switch (glyphLine.value[0]) {\n      case 3:\n      case 4:\n        if (\n          isOnline(glyphLine.value[3], glyphLine.value[4], glyphLine.value[5], glyphLine.value[6]) ||\n          isOnline(glyphLine.value[5], glyphLine.value[6], glyphLine.value[7], glyphLine.value[8])\n        ) {\n          result = MatchType.online;\n        }\n        break;\n      case 1:\n      case 7:\n        if (isOnline(glyphLine.value[3], glyphLine.value[4], glyphLine.value[5], glyphLine.value[6])) {\n          result = MatchType.online;\n        }\n        break;\n    }\n  }\n  return result;\n};\n","import * as React from \"react\";\nimport { xorMaskTypes, xorMaskShapeMap } from \"../xorMask\";\n\nconst XorMasks = () => <>\n  {xorMaskTypes.map((maskType) => (\n    <path key={maskType} id={`xormask_${maskType}`} d={xorMaskShapeMap[maskType]} />\n  ))}\n</>\n\nexport default XorMasks;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { AppState } from '../reducers';\n\nimport './Grid.css';\n\nconst Grid = () => {\n  const grid = useSelector((state: AppState) => state.grid);\n  if (!grid.display) {\n    return <></>;\n  }\n  const xs = [];\n  for (let x = grid.originX; x < 200; x += grid.spacingX) {\n    xs.push(x);\n  }\n  const ys = [];\n  for (let y = grid.originY; y < 200; y += grid.spacingY) {\n    ys.push(y);\n  }\n  return (\n    <g className=\"grid-lines\">\n      {xs.map((x) => (\n        <path\n          key={x}\n          d={`M ${x} 0 V 200`}\n        />\n      ))}\n      {ys.map((y) => (\n        <path\n          key={y}\n          d={`M 0 ${y} H 200`}\n        />\n      ))}\n    </g>\n  );\n};\n\nexport default Grid;","import React from 'react';\n\nimport { Polygons } from '@kurgm/kage-engine';\n\nexport interface StrokeComponentProps {\n  polygons: Polygons;\n}\n\nconst StrokeComponent = (props: StrokeComponentProps) => (\n  <>\n    {props.polygons.array.map((polygon, i) => (\n      <polygon key={i} points={polygon.array.map(({ x, y }) => `${x},${y} `).join(\"\")} />\n    ))}\n  </>\n);\n\nexport default StrokeComponent;\n","import React from 'react';\n\nimport { Glyph } from '../kageUtils/glyph';\nimport { makeGlyphSeparated, KShotai } from '../kage';\nimport { XorMaskType } from '../xorMask';\n\nimport Stroke from './Stroke';\n\nimport './Glyph.css'\n\nexport interface GlyphComponentProps {\n  glyph: Glyph;\n  buhinMap: Map<string, string>;\n  selection: number[];\n  shotai: KShotai;\n  xorMaskType: XorMaskType;\n  handleMouseDownDeselectedStroke?: (evt: React.MouseEvent, index: number) => void;\n  handleMouseDownSelectedStroke?: (evt: React.MouseEvent, index: number) => void;\n  makeGlyphSeparated?: typeof makeGlyphSeparated;\n}\n\nconst GlyphComponent = (props: GlyphComponentProps) => {\n  const polygonsSep = (props.makeGlyphSeparated || makeGlyphSeparated)(props.glyph, props.buhinMap, props.shotai);\n\n  const { selection } = props;\n  const nonSelection = polygonsSep.map((_polygons, index) => index)\n    .filter((index) => !selection.includes(index));\n\n  return (\n    <>\n      <g className=\"strokes-deselected\">\n        {nonSelection.map((index) => (\n          <g key={index} onMouseDown={(evt) => props.handleMouseDownDeselectedStroke?.(evt, index)}>\n            <Stroke polygons={polygonsSep[index]} />\n          </g>\n        ))}\n      </g>\n      {props.xorMaskType !== \"none\" && <>\n        <use xlinkHref={`#xormask_${props.xorMaskType}`} className=\"xormask-fill\" />\n        <clipPath id=\"xorMaskClip\">\n          <use xlinkHref={`#xormask_${props.xorMaskType}`} />\n        </clipPath>\n        <g clipPath=\"url(#xorMaskClip)\" className=\"strokes-invert\">\n          {nonSelection.map((index) => (\n            <g key={index}>\n              <Stroke polygons={polygonsSep[index]} />\n            </g>\n          ))}\n        </g>\n      </>}\n      <g className=\"strokes-selected\">\n        {selection.map((index) => (\n          <g key={index} onMouseDown={(evt) => props.handleMouseDownSelectedStroke?.(evt, index)}>\n            <Stroke polygons={polygonsSep[index]} />\n          </g>\n        ))}\n      </g>\n    </>\n  );\n};\n\nexport default GlyphComponent;\n","import React from 'react';\n\nimport { decomposeDeepGlyph } from '../kageUtils/decompose';\nimport { Glyph } from '../kageUtils/glyph';\n\nimport './StrokeCenterLine.css';\n\nexport interface StrokeCenterLineProps {\n  glyph: Glyph;\n  buhinMap: Map<string, string>;\n}\n\nconst StrokeCenterLine = (props: StrokeCenterLineProps) => {\n  const strokes = decomposeDeepGlyph(props.glyph, props.buhinMap);\n  return (\n    <g className=\"stroke-center-line\">\n      {strokes.map((stroke, index) => {\n        const v = stroke.value;\n        switch (v[0]) {\n          case 1:\n            return <path key={index} d={`M ${v[3]} ${v[4]} ${v[5]} ${v[6]}`} />\n          case 2:\n            return <path key={index} d={`M ${v[3]} ${v[4]} Q ${v[5]} ${v[6]} ${v[7]} ${v[8]}`} />\n          case 3:\n          case 4:\n            return <path key={index} d={`M ${v[3]} ${v[4]} ${v[5]} ${v[6]} ${v[7]} ${v[8]}`} />\n          case 6:\n            return <path key={index} d={`M ${v[3]} ${v[4]} C ${v[5]} ${v[6]} ${v[7]} ${v[8]} ${v[9]} ${v[10]}`} />\n          case 7:\n            return <path key={index} d={`M ${v[3]} ${v[4]} ${v[5]} ${v[6]} Q ${v[7]} ${v[8]} ${v[9]} ${v[10]}`} />\n          default:\n            return null;\n        }\n      })}\n    </g>\n  )\n}\n\nexport default StrokeCenterLine;\n","import React from 'react';\n\nimport './ControlPoint.css';\n\ninterface ControlPointProps {\n  x: number;\n  y: number;\n  className?: string;\n  handleMouseDown: (evt: React.MouseEvent) => void;\n}\n\nconst ControlPoint = (props: ControlPointProps) => (\n  <rect\n    x={props.x - 4}\n    y={props.y - 4}\n    width={8} height={8}\n    className={`controlpoint-rect ${props.className || ''}`}\n    onMouseDown={props.handleMouseDown}\n  />\n);\n\nexport default ControlPoint;\n","import React, { useCallback, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { createSelector } from 'reselect';\n\nimport { dragActions, RectPointPosition } from '../actions/drag';\nimport { AppState } from '../reducers';\nimport { draggedGlyphSelector } from '../selectors/draggedGlyph';\nimport { getGlyphLinesBBX } from '../kageUtils/bbx';\nimport { getMatchType, MatchType } from '../kageUtils/match';\nimport { showCenterLine } from '../components/OptionModal';\n\nimport ControlPoint from './ControlPoint';\n\nimport './SelectionControl.css';\n\ninterface RectControl {\n  multiSelect: boolean;\n  coords: [number, number, number, number];\n}\ninterface ControlPointSpec {\n  x: number;\n  y: number;\n  className: string;\n}\n\ninterface SelectionControlSpec {\n  rectControl: RectControl | null;\n  pointControl: ControlPointSpec[];\n  auxiliaryLines: [number, number, number, number][];\n  centerLine: string | null;\n}\n\nconst selectionControlSelector = createSelector(\n  [\n    draggedGlyphSelector,\n    (state: AppState) => state.selection,\n  ],\n  (glyph, selection): SelectionControlSpec => {\n    if (selection.length === 0) {\n      return { rectControl: null, pointControl: [], auxiliaryLines: [], centerLine: null };\n    }\n    if (selection.length > 1) {\n      const selectedStrokes = selection.map((index) => glyph[index]);\n      const bbx = getGlyphLinesBBX(selectedStrokes);\n      return {\n        rectControl: {\n          multiSelect: true,\n          coords: bbx,\n        },\n        pointControl: [],\n        auxiliaryLines: [],\n        centerLine: null,\n      };\n    }\n    const selectedStroke = glyph[selection[0]];\n    switch (selectedStroke.value[0]) {\n      case 0:\n      case 9:\n      case 99:\n        return {\n          rectControl: {\n            multiSelect: false,\n            coords: [\n              selectedStroke.value[3],\n              selectedStroke.value[4],\n              selectedStroke.value[5],\n              selectedStroke.value[6],\n            ],\n          },\n          pointControl: [],\n          auxiliaryLines: [],\n          centerLine: null,\n        };\n      case 1:\n      case 2:\n      case 3:\n      case 4:\n      case 6:\n      case 7: {\n        const pointControl: ControlPointSpec[] = [];\n        for (let i = 3; i + 2 <= selectedStroke.value.length; i += 2) {\n          const matchType = getMatchType(glyph, {\n            lineIndex: selection[0],\n            pointIndex: (i - 3) / 2,\n          });\n          let className = '';\n          if (matchType === MatchType.match) {\n              className = 'match';\n          } else if (matchType === MatchType.online) {\n              className = 'online';\n          }\n\n          pointControl.push({\n            x: selectedStroke.value[i],\n            y: selectedStroke.value[i + 1],\n            className,\n          });\n        }\n\n        const auxiliaryLines: [number, number, number, number][] = [];\n        if (selectedStroke.value[0] === 2 || selectedStroke.value[0] === 6) {\n          auxiliaryLines.push([\n            selectedStroke.value[3],\n            selectedStroke.value[4],\n            selectedStroke.value[5],\n            selectedStroke.value[6],\n          ]);\n        }\n        if (selectedStroke.value[0] === 2 || selectedStroke.value[0] === 7) {\n          auxiliaryLines.push([\n            selectedStroke.value[5],\n            selectedStroke.value[6],\n            selectedStroke.value[7],\n            selectedStroke.value[8],\n          ]);\n        }\n        if (selectedStroke.value[0] === 6 || selectedStroke.value[0] === 7) {\n          auxiliaryLines.push([\n            selectedStroke.value[7],\n            selectedStroke.value[8],\n            selectedStroke.value[9],\n            selectedStroke.value[10],\n          ]);\n        }\n        const v = selectedStroke.value;\n        let centerLine: string | null = null;\n        switch (v[0]) {\n          case 1:\n            centerLine = `M ${v[3]} ${v[4]} ${v[5]} ${v[6]}`;\n            break;\n          case 2:\n            centerLine = `M ${v[3]} ${v[4]} Q ${v[5]} ${v[6]} ${v[7]} ${v[8]}`;\n            break;\n          case 3:\n          case 4:\n            centerLine = `M ${v[3]} ${v[4]} ${v[5]} ${v[6]} ${v[7]} ${v[8]}`;\n            break;\n          case 6:\n            centerLine = `M ${v[3]} ${v[4]} C ${v[5]} ${v[6]} ${v[7]} ${v[8]} ${v[9]} ${v[10]}`;\n            break;\n          case 7:\n            centerLine = `M ${v[3]} ${v[4]} ${v[5]} ${v[6]} Q ${v[7]} ${v[8]} ${v[9]} ${v[10]}`;\n            break;\n          default:\n            break;\n        }\n        return { rectControl: null, pointControl, auxiliaryLines, centerLine };\n      }\n      default:\n        return { rectControl: null, pointControl: [], auxiliaryLines: [], centerLine: null };\n    }\n  }\n);\n\nconst SelectionControl = () => {\n  const { rectControl, pointControl, auxiliaryLines, centerLine } = useSelector(selectionControlSelector);\n  const showStrokeCenterLine = useSelector((state: AppState) => state.showStrokeCenterLine);\n\n  const dispatch = useDispatch();\n  const handleMouseDownRectControl = useCallback((evt: React.MouseEvent, position: RectPointPosition) => {\n    dispatch(dragActions.startResize([evt, position]));\n    evt.stopPropagation();\n  }, [dispatch]);\n\n  const handleMouseDownNorthPoint = useCallback(\n    (evt: React.MouseEvent) => handleMouseDownRectControl(evt, RectPointPosition.north),\n    [handleMouseDownRectControl]\n  );\n  const handleMouseDownWestPoint = useCallback(\n    (evt: React.MouseEvent) => handleMouseDownRectControl(evt, RectPointPosition.west),\n    [handleMouseDownRectControl]\n  );\n  const handleMouseDownSouthPoint = useCallback(\n    (evt: React.MouseEvent) => handleMouseDownRectControl(evt, RectPointPosition.south),\n    [handleMouseDownRectControl]\n  );\n  const handleMouseDownEastPoint = useCallback(\n    (evt: React.MouseEvent) => handleMouseDownRectControl(evt, RectPointPosition.east),\n    [handleMouseDownRectControl]\n  );\n  const handleMouseDownSoutheastPoint = useCallback(\n    (evt: React.MouseEvent) => handleMouseDownRectControl(evt, RectPointPosition.southeast),\n    [handleMouseDownRectControl]\n  );\n  const handleMouseDownSouthwestPoint = useCallback(\n    (evt: React.MouseEvent) => handleMouseDownRectControl(evt, RectPointPosition.southwest),\n    [handleMouseDownRectControl]\n  );\n  const handleMouseDownNortheastPoint = useCallback(\n    (evt: React.MouseEvent) => handleMouseDownRectControl(evt, RectPointPosition.northeast),\n    [handleMouseDownRectControl]\n  );\n  const handleMouseDownNorthwestPoint = useCallback(\n    (evt: React.MouseEvent) => handleMouseDownRectControl(evt, RectPointPosition.northwest),\n    [handleMouseDownRectControl]\n  );\n\n  const handleMouseDownPointControls = useMemo(() => {\n    return pointControl.map((_control, pointIndex) => (evt: React.MouseEvent) => {\n      dispatch(dragActions.startPointDrag([evt, pointIndex]));\n      evt.stopPropagation();\n    });\n  }, [dispatch, pointControl]);\n\n  const controlPointNorth = !rectControl || rectControl.coords[0] < rectControl.coords[2] ? 'north' : 'south';\n  const controlPointSouth = !rectControl || rectControl.coords[0] < rectControl.coords[2] ? 'south' : 'north';\n  const controlPointWest = !rectControl || rectControl.coords[1] < rectControl.coords[3] ? 'west' : 'east';\n  const controlPointEast = !rectControl || rectControl.coords[1] < rectControl.coords[3] ? 'east' : 'west';\n\n  return <>\n    {rectControl && <>\n      <rect\n        className='selection-rect'\n        x={Math.min(rectControl.coords[0], rectControl.coords[2])}\n        y={Math.min(rectControl.coords[1], rectControl.coords[3])}\n        width={Math.abs(rectControl.coords[2] - rectControl.coords[0])}\n        height={Math.abs(rectControl.coords[3] - rectControl.coords[1])}\n      />\n      <ControlPoint\n        x={(rectControl.coords[0] + rectControl.coords[2]) / 2}\n        y={rectControl.coords[1]}\n        className={controlPointNorth}\n        handleMouseDown={handleMouseDownNorthPoint}\n      />\n      <ControlPoint\n        x={rectControl.coords[0]}\n        y={(rectControl.coords[1] + rectControl.coords[3]) / 2}\n        className={controlPointWest}\n        handleMouseDown={handleMouseDownWestPoint}\n      />\n      <ControlPoint\n        x={(rectControl.coords[0] + rectControl.coords[2]) / 2}\n        y={rectControl.coords[3]}\n        className={controlPointSouth}\n        handleMouseDown={handleMouseDownSouthPoint}\n      />\n      <ControlPoint\n        x={rectControl.coords[2]}\n        y={(rectControl.coords[1] + rectControl.coords[3]) / 2}\n        className={controlPointEast}\n        handleMouseDown={handleMouseDownEastPoint}\n      />\n      <ControlPoint\n        x={rectControl.coords[2]}\n        y={rectControl.coords[3]}\n        className={controlPointSouth + controlPointEast}\n        handleMouseDown={handleMouseDownSoutheastPoint}\n      />\n      <ControlPoint\n        x={rectControl.coords[0]}\n        y={rectControl.coords[3]}\n        className={controlPointSouth + controlPointWest}\n        handleMouseDown={handleMouseDownSouthwestPoint}\n      />\n      <ControlPoint\n        x={rectControl.coords[2]}\n        y={rectControl.coords[1]}\n        className={controlPointNorth + controlPointEast}\n        handleMouseDown={handleMouseDownNortheastPoint}\n      />\n      <ControlPoint\n        x={rectControl.coords[0]}\n        y={rectControl.coords[1]}\n        className={controlPointNorth + controlPointWest}\n        handleMouseDown={handleMouseDownNorthwestPoint}\n      />\n    </>}\n    {auxiliaryLines.map((points, index) => (\n      <path className=\"auxiliary-lines\" key={index} d={'M ' + points.join(' ')} />\n    ))}\n    {showStrokeCenterLine === showCenterLine.selection && centerLine &&\n        <path className=\"stroke-center-line\" d={centerLine} />\n    }\n    {pointControl.map(({ x, y, className }, index) => (\n      <ControlPoint\n        key={index}\n        x={x} y={y}\n        className={className}\n        handleMouseDown={handleMouseDownPointControls[index]}\n      />\n    ))}\n  </>;\n};\n\nexport default SelectionControl;","import React from 'react';\n\nimport './AreaSelectRect.css';\n\ninterface AreaSelectRectProps {\n  rect: [number, number, number, number] | null;\n}\n\nconst AreaSelectRect = (props: AreaSelectRectProps) => {\n  if (!props.rect) {\n    return null;\n  }\n  let [x1, y1, x2, y2] = props.rect;\n  if (x1 > x2) {\n    // swap\n    const temp = x1;\n    x1 = x2;\n    x2 = temp;\n  }\n  if (y1 > y2) {\n    // swap\n    const temp = y1;\n    y1 = y2;\n    y2 = temp;\n  }\n\n  return <rect className='areaselect-rect' x={x1} y={y1} width={x2 - x1} height={y2 - y1} />;\n};\n\nexport default AreaSelectRect;\n","import React, { useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { AppState } from '../reducers';\n\nimport { selectActions } from '../actions/select';\nimport { dragActions, CTMInv } from '../actions/drag';\nimport { draggedGlyphSelector } from '../selectors/draggedGlyph';\nimport { showCenterLine } from '../components/OptionModal';\n\nimport XorMasks from './XorMasks';\nimport Grid from './Grid';\nimport Glyph from './Glyph';\nimport StrokeCenterLine from './StrokeCenterLine';\nimport SelectionControl from './SelectionControl';\nimport AreaSelectRect from './AreaSelectRect';\n\nimport './GlyphArea.css';\n\nconst GlyphArea = () => {\n  const glyph = useSelector(draggedGlyphSelector);\n  const buhinMap = useSelector((state: AppState) => state.buhinMap);\n  const shotai = useSelector((state: AppState) => state.shotai);\n  const xorMaskType = useSelector((state: AppState) => state.xorMaskType);\n  const selection = useSelector((state: AppState) => state.selection);\n  const areaSelectRect = useSelector((state: AppState) => state.areaSelectRect);\n  const freehandMode = useSelector((state: AppState) => state.freehandMode);\n  const showStrokeCenterLine = useSelector((state: AppState) => state.showStrokeCenterLine);\n\n  const svgClassName = freehandMode ? 'freehand' : '';\n\n  const dispatch = useDispatch();\n  const handleMouseDownCapture = useCallback((evt: React.MouseEvent<SVGSVGElement>) => {\n    const ctm = evt.currentTarget.getScreenCTM();\n    if (!ctm) {\n      return;\n    }\n    const pt = evt.currentTarget.createSVGPoint();\n    const ictm = ctm.inverse();\n    const ctmInv: CTMInv = (evtx, evty) => {\n      pt.x = evtx;\n      pt.y = evty;\n      const { x, y } = pt.matrixTransform(ictm);\n      return [x, y];\n    };\n    dispatch(dragActions.updateCTMInv(ctmInv));\n  }, [dispatch]);\n\n  const handleMouseDownBackground = useCallback((evt: React.MouseEvent) => {\n    if (!(evt.shiftKey || evt.ctrlKey)) {\n      dispatch(selectActions.selectNone());\n    }\n    dispatch(dragActions.startBackgroundDrag(evt));\n    evt.preventDefault();\n  }, [dispatch]);\n  const handleMouseDownDeselectedStroke = useCallback((evt: React.MouseEvent, index: number) => {\n    if (evt.shiftKey || evt.ctrlKey) {\n      dispatch(selectActions.selectAddSingle(index));\n    } else {\n      dispatch(selectActions.selectSingle(index));\n    }\n    dispatch(dragActions.startSelectionDrag(evt));\n    evt.preventDefault();\n    evt.stopPropagation();\n  }, [dispatch]);\n  const handleMouseDownSelectedStroke = useCallback((evt: React.MouseEvent, index: number) => {\n    if (evt.shiftKey || evt.ctrlKey) {\n      dispatch(selectActions.selectRemoveSingle(index));\n    }\n    dispatch(dragActions.startSelectionDrag(evt));\n    evt.preventDefault();\n    evt.stopPropagation();\n  }, [dispatch]);\n\n  useEffect(() => {\n    const handleMouseMove = (evt: MouseEvent) => {\n      dispatch(dragActions.mouseMove(evt));\n    };\n    const handleMouseUp = (evt: MouseEvent) => {\n      dispatch(dragActions.mouseUp(evt));\n    };\n    document.addEventListener('mousemove', handleMouseMove)\n    document.addEventListener('mouseup', handleMouseUp);\n    return () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    };\n  }, [dispatch]);\n\n  return (\n    <div className=\"glyph-area\">\n      <svg\n        width=\"100%\" height=\"100%\" viewBox=\"-20 -20 500 240\"\n        className={svgClassName}\n        onContextMenu={(evt) => evt.preventDefault()}\n        onMouseDownCapture={handleMouseDownCapture}\n        onMouseDown={handleMouseDownBackground}\n      >\n        <defs>\n          <XorMasks />\n        </defs>\n        <Grid />\n        <rect x=\"0\" y=\"0\" width=\"200\" height=\"200\" className=\"glyph-boundary\" />\n        <rect x=\"12\" y=\"12\" width=\"176\" height=\"176\" className=\"glyph-guide\" />\n        <Glyph\n          glyph={glyph}\n          buhinMap={buhinMap}\n          shotai={shotai}\n          xorMaskType={xorMaskType}\n          selection={selection}\n          handleMouseDownDeselectedStroke={handleMouseDownDeselectedStroke}\n          handleMouseDownSelectedStroke={handleMouseDownSelectedStroke}\n        />\n        {showStrokeCenterLine === showCenterLine.always && <StrokeCenterLine glyph={glyph} buhinMap={buhinMap} />}\n        <SelectionControl />\n        <AreaSelectRect rect={areaSelectRect} />\n      </svg>\n    </div>\n  );\n};\n\nexport default GlyphArea;\n","import React, { useCallback } from 'react';\n\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport { useTranslation } from 'react-i18next';\n\nimport { editorActions } from '../actions/editor';\nimport { selectActions } from '../actions/select';\nimport { AppState } from '../reducers';\nimport { GlyphLine } from '../kageUtils/glyph';\nimport { calcStretchScalar, getStretchPositions } from '../kageUtils/stretchparam';\nimport { strokeTypes, headShapeTypes, tailShapeTypes, isValidStrokeShapeTypes } from '../kageUtils/stroketype';\nimport { ReflectRotateType, reflectRotateTypeParamsMap, reflectRotateTypes } from '../kageUtils/reflectrotate';\nimport { draggedGlyphSelector } from '../selectors/draggedGlyph';\n\nimport './SelectionInfo.css'\n\n\nconst selectedGlyphLineSelector = createSelector([\n  (state: AppState) => state.selection,\n  draggedGlyphSelector,\n], (selection, draggedGlyph): GlyphLine | null => {\n  if (selection.length !== 1) {\n    return null;\n  }\n  return draggedGlyph[selection[0]];\n});\n\ninterface StrokeInfo {\n  strokeType: number;\n  headShapeType: number;\n  tailShapeType: number;\n  validTypes: boolean;\n  coordString: string;\n}\nconst strokeInfoSelector = createSelector([\n  selectedGlyphLineSelector\n], (selectedStroke): StrokeInfo | null => {\n  if (!selectedStroke) {\n    return null;\n  }\n  if (!strokeTypes.includes(selectedStroke.value[0])) {\n    return null;\n  }\n\n  const points = [];\n  for (let i = 3; i + 2 <= selectedStroke.value.length; i += 2) {\n    points.push(`(${selectedStroke.value[i]},${selectedStroke.value[i + 1]})`);\n  }\n  return {\n    strokeType: selectedStroke.value[0],\n    headShapeType: selectedStroke.value[1],\n    tailShapeType: selectedStroke.value[2],\n    validTypes: isValidStrokeShapeTypes(selectedStroke),\n    coordString: points.join(' → '),\n  };\n});\n\ninterface PartInfo {\n  partName: string;\n  entityName: string | null;\n  coordString: string;\n  stretchCoeff: number | null;\n}\nconst partInfoSelector = createSelector([\n  selectedGlyphLineSelector,\n  (state: AppState) => state.buhinMap,\n  (state: AppState) => state.stretchParamMap,\n], (selectedStroke, buhinMap, stretchParamMap): PartInfo | null => {\n  if (!selectedStroke) {\n    return null;\n  }\n  if (selectedStroke.value[0] !== 99) {\n    return null;\n  }\n  const partName = selectedStroke.partName!;\n  const buhinSource = buhinMap.get(partName);\n  let entityName: string | null = null;\n  if (buhinSource) {\n    const aliasMatch = /^(?:0:1:0:[^$]+\\$)?99:0:0:0:0:200:200:([^$]+)$/.exec(buhinSource);\n    if (aliasMatch) {\n      entityName = aliasMatch[1];\n    }\n  }\n  const stretchParam = stretchParamMap.get(partName);\n  const stretchCoeff = stretchParam\n    ? calcStretchScalar(stretchParam, getStretchPositions(selectedStroke)!)\n    : null;\n\n  return {\n    partName,\n    entityName,\n    coordString: `(${selectedStroke.value[3]},${selectedStroke.value[4]}) → (${selectedStroke.value[5]},${selectedStroke.value[6]})`,\n    stretchCoeff,\n  };\n});\n\ninterface ReflectRotateInfo {\n  opType: ReflectRotateType | -1;\n  coordString: string;\n}\nconst reflectRotateInfoSelector = createSelector([\n  selectedGlyphLineSelector,\n], (selectedStroke): ReflectRotateInfo | null => {\n  if (!selectedStroke) {\n    return null;\n  }\n  if (selectedStroke.value[0] !== 0) {\n    return null;\n  }\n  const opType = reflectRotateTypes.find((type) => {\n    const [param1, param2] = reflectRotateTypeParamsMap[type];\n    return param1 === selectedStroke.value[1] && param2 === selectedStroke.value[2];\n  }) ?? -1;\n\n  return {\n    opType,\n    coordString: `(${selectedStroke.value[3]},${selectedStroke.value[4]}) → (${selectedStroke.value[5]},${selectedStroke.value[6]})`,\n  };\n});\n\ninterface OtherInfo {\n  isMultiple: boolean;\n  coordString?: string;\n}\nconst otherInfoSelector = createSelector([\n  (state: AppState) => state.selection,\n  selectedGlyphLineSelector,\n], (selection, selectedStroke_): OtherInfo | null => {\n  if (selection.length > 1) {\n    return { isMultiple: true };\n  }\n  if (selection.length === 0) {\n    return { isMultiple: false };\n  }\n  const selectedStroke = selectedStroke_!;\n  const strokeType = selectedStroke.value[0];\n  if (strokeTypes.includes(strokeType) || strokeType === 99 || strokeType === 0) {\n    return null;\n  }\n\n  const points = [];\n  for (let i = 3; i + 2 <= selectedStroke.value.length; i += 2) {\n    points.push(`(${selectedStroke.value[i]},${selectedStroke.value[i + 1]})`);\n  }\n  return { isMultiple: false, coordString: points.join(' → ') };\n});\n\nconst selectIndexStringSelector = createSelector([\n  (state: AppState) => state.glyph.length,\n  (state: AppState) => state.selection,\n], (glyphLength, selection) => {\n  const selectedIndexString = selection\n    .map((index) => index + 1)\n    .sort((a, b) => a - b).join(',');\n  return `${selectedIndexString || '-'} / ${glyphLength || '-'}`;\n});\n\nconst buttonsDisabledSelector = createSelector([\n  (state: AppState) => state.glyph.length,\n  (state: AppState) => state.selection,\n], (glyphLength, selection) => ({\n  swapPrevDisabled: selection.length !== 1 || selection[0] === 0,\n  swapNextDisabled: selection.length !== 1 || selection[0] === glyphLength - 1,\n  selectPrevDisabled: glyphLength === 0,\n  selectNextDisabled: glyphLength === 0,\n}));\n\nconst SelectionInfo = () => {\n\n  const strokeInfo = useSelector(strokeInfoSelector);\n  const partInfo = useSelector(partInfoSelector);\n  const reflectRotateInfo = useSelector(reflectRotateInfoSelector);\n  const otherInfo = useSelector(otherInfoSelector);\n\n  const selectIndexString = useSelector(selectIndexStringSelector);\n\n  const {\n    swapPrevDisabled, swapNextDisabled,\n    selectPrevDisabled, selectNextDisabled,\n  } = useSelector(buttonsDisabledSelector, shallowEqual);\n\n  const dispatch = useDispatch();\n  const changeStrokeType = useCallback((evt: React.ChangeEvent<HTMLSelectElement>) => {\n    dispatch(editorActions.changeStrokeType(+evt.currentTarget.value));\n  }, [dispatch]);\n  const changeHeadShapeType = useCallback((evt: React.ChangeEvent<HTMLSelectElement>) => {\n    dispatch(editorActions.changeHeadShapeType(+evt.currentTarget.value));\n  }, [dispatch]);\n  const changeTailShapeType = useCallback((evt: React.ChangeEvent<HTMLSelectElement>) => {\n    dispatch(editorActions.changeTailShapeType(+evt.currentTarget.value));\n  }, [dispatch]);\n  const changeStretchCoeff = useCallback((evt: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(editorActions.changeStretchCoeff(+evt.currentTarget.value));\n  }, [dispatch]);\n  const changeReflectRotateOpType = useCallback((evt: React.ChangeEvent<HTMLSelectElement>) => {\n    dispatch(editorActions.changeReflectRotateOpType(+evt.currentTarget.value))\n  }, [dispatch]);\n  const selectPrev = useCallback(() => {\n    dispatch(selectActions.selectPrev());\n  }, [dispatch]);\n  const selectNext = useCallback(() => {\n    dispatch(selectActions.selectNext());\n  }, [dispatch]);\n  const swapWithPrev = useCallback(() => {\n    dispatch(editorActions.swapWithPrev());\n  }, [dispatch]);\n  const swapWithNext = useCallback(() => {\n    dispatch(editorActions.swapWithNext());\n  }, [dispatch]);\n\n  const { t } = useTranslation();\n  return (\n    <div className=\"select-control\">\n      <div className=\"selected-info\">\n        {strokeInfo && <>\n          <div>\n            {t('stroke type')}\n            {' '}\n            <select value={strokeInfo.strokeType} onChange={changeStrokeType}>\n              {strokeTypes.map((strokeType) => (\n                <option key={strokeType} value={strokeType}>\n                  {t(`stroke type ${strokeType}`)}\n                </option>\n              ))}\n              {!strokeTypes.includes(strokeInfo.strokeType) && (\n                <option value={strokeInfo.strokeType} />\n              )}\n            </select>\n            {'　'}\n            {t('head type')}\n            {' '}\n            <select value={strokeInfo.headShapeType} onChange={changeHeadShapeType}>\n              {headShapeTypes[strokeInfo.strokeType].map((headShapeType) => (\n                <option key={headShapeType} value={headShapeType}>\n                  {t(`head type ${strokeInfo.strokeType}-${headShapeType}`)}\n                </option>\n              ))}\n              {!headShapeTypes[strokeInfo.strokeType].includes(strokeInfo.headShapeType) && (\n                <option value={strokeInfo.headShapeType} />\n              )}\n            </select>\n            {'　'}\n            {t('tail type')}\n            {' '}\n            <select value={strokeInfo.tailShapeType} onChange={changeTailShapeType}>\n              {tailShapeTypes[strokeInfo.strokeType].map((tailShapeType) => (\n                <option key={tailShapeType} value={tailShapeType}>\n                  {t(`tail type ${strokeInfo.strokeType}-${tailShapeType}`)}\n                </option>\n              ))}\n              {!tailShapeTypes[strokeInfo.strokeType].includes(strokeInfo.tailShapeType) && (\n                <option value={strokeInfo.tailShapeType} />\n              )}\n            </select>\n            {!strokeInfo.validTypes && (\n              <span className=\"alert\">\n                {'　'}\n                {t('invalid stroke shape types')}\n              </span>\n            )}\n          </div>\n          <div>{strokeInfo.coordString}</div>\n        </>}\n        {partInfo && <>\n          <div>\n            {t('part')}\n            {' '}\n            <strong>{partInfo.partName}</strong>\n            {' '}\n            {partInfo.entityName && t('alias of', { entity: partInfo.entityName })}\n          </div>\n          <div>{partInfo.coordString}</div>\n          {partInfo.stretchCoeff !== null && (\n            <div>\n              {t('stretch')}\n              {' '}\n              <input\n                type=\"range\" min={-10} max={10}\n                value={partInfo.stretchCoeff}\n                onChange={changeStretchCoeff}\n              />\n              {' '}\n              {partInfo.stretchCoeff}\n            </div>\n          )}\n        </>}\n        {reflectRotateInfo && <>\n          <div>\n            <select value={reflectRotateInfo.opType} onChange={changeReflectRotateOpType}>\n              {reflectRotateTypes.map((opType) => (\n                <option key={opType} value={opType}>\n                  {t(`operation type ${ReflectRotateType[opType]}`)}\n                </option>\n              ))}\n              {!reflectRotateTypes.includes(reflectRotateInfo.opType) && (\n                <option value={reflectRotateInfo.opType} />\n              )}\n            </select>\n          </div>\n          <div>{reflectRotateInfo.coordString}</div>\n        </>}\n        {otherInfo && <>\n          {otherInfo.isMultiple && <div>{t('selecting multiple strokes')}</div>}\n          {otherInfo.coordString && <div>{otherInfo.coordString}</div>}\n        </>}\n      </div>\n      <div className=\"selection-control\">\n        <button\n          disabled={swapPrevDisabled}\n          onClick={swapWithPrev}\n        >\n          {t('swap with prev')}\n        </button>\n        <button\n          className=\"select-prevnext-button\"\n          disabled={selectPrevDisabled}\n          onClick={selectPrev}\n        >\n          {t('select prev')}\n        </button>\n        <div className=\"selection-num\">\n          {selectIndexString}\n        </div>\n        <button\n          className=\"select-prevnext-button\"\n          disabled={selectNextDisabled}\n          onClick={selectNext}\n        >\n          {t('select next')}\n        </button>\n        <button\n          disabled={swapNextDisabled}\n          onClick={swapWithNext}\n        >\n          {t('swap with next')}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default SelectionInfo;\n","import { createSelector } from 'reselect';\n\nimport { Glyph } from '../kageUtils/glyph';\nimport { getGlyphLineBBX } from '../kageUtils/bbx';\n\nimport { draggedGlyphSelector } from './draggedGlyph';\n\nexport const submitGlyphSelector = createSelector([\n  draggedGlyphSelector,\n], (glyph: Glyph): Glyph => {\n  return glyph.filter((glyphLine) => getGlyphLineBBX(glyphLine)[0] < 200);\n});\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { submitGlyphSelector } from '../selectors/submitGlyph';\nimport { AppState } from '../reducers';\nimport { makeGlyphSeparatedForSubmit } from '../kage';\n\nimport GlyphComponent from './Glyph';\n\nconst SubmitPreview = () => {\n  const submitGlyph = useSelector(submitGlyphSelector);\n  const buhinMap = useSelector((state: AppState) => state.buhinMap);\n  const shotai = useSelector((state: AppState) => state.shotai);\n  const xorMaskType = useSelector((state: AppState) => state.xorMaskType);\n\n  return (\n    <svg className=\"preview-thumbnail\" viewBox=\"0 0 200 200\" width=\"50\" height=\"50\">\n      <GlyphComponent\n        buhinMap={buhinMap}\n        glyph={submitGlyph}\n        shotai={shotai}\n        xorMaskType={xorMaskType}\n        selection={[]}\n        makeGlyphSeparated={makeGlyphSeparatedForSubmit}\n      />\n    </svg>\n  );\n};\n\nexport default SubmitPreview;\n","import React, { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { useTranslation } from 'react-i18next';\n\nimport { AppState } from '../reducers';\nimport { editorActions } from '../actions/editor';\nimport { selectActions } from '../actions/select';\nimport { undoActions } from '../actions/undo';\nimport { displayActions } from '../actions/display';\n\nimport SelectionInfo from './SelectionInfo';\nimport SubmitPreview from './SubmitPreview';\n\nimport './EditorControls.css';\n\nconst EditorControls = () => {\n  const glyph = useSelector((state: AppState) => state.glyph);\n  const selection = useSelector((state: AppState) => state.selection);\n  const clipboard = useSelector((state: AppState) => state.clipboard);\n  const freehandMode = useSelector((state: AppState) => state.freehandMode);\n  const undoLength = useSelector((state: AppState) => state.undoStacks.undo.length);\n  const redoLength = useSelector((state: AppState) => state.undoStacks.redo.length);\n\n  const undoDisabled = undoLength === 0;\n  const redoDisabled = redoLength === 0;\n  const pasteDisabled = clipboard.length === 0;\n  const decomposeDisabled = !selection.some((index) => glyph[index].value[0] === 99);\n\n  const dispatch = useDispatch();\n  const undo = useCallback(() => {\n    dispatch(undoActions.undo());\n  }, [dispatch]);\n  const redo = useCallback(() => {\n    dispatch(undoActions.redo());\n  }, [dispatch]);\n  const selectAll = useCallback(() => {\n    dispatch(selectActions.selectAll());\n  }, [dispatch]);\n  const selectDeselected = useCallback(() => {\n    dispatch(selectActions.selectDeselected());\n  }, [dispatch]);\n  const copy = useCallback(() => {\n    dispatch(editorActions.copy());\n  }, [dispatch]);\n  const paste = useCallback(() => {\n    dispatch(editorActions.paste());\n  }, [dispatch]);\n  const cut = useCallback(() => {\n    dispatch(editorActions.cut());\n  }, [dispatch]);\n  const toggleFreehand = useCallback(() => {\n    dispatch(editorActions.toggleFreehand());\n  }, [dispatch]);\n  const decompose = useCallback(() => {\n    dispatch(editorActions.decomposeSelected());\n  }, [dispatch]);\n  const options = useCallback(() => {\n    dispatch(displayActions.openOptionModal());\n  }, [dispatch]);\n  const finishEdit = useCallback((evt: React.MouseEvent) => {\n    dispatch(editorActions.finishEdit(evt.nativeEvent));\n  }, [dispatch]);\n\n  const { t } = useTranslation();\n  return (\n    <div className=\"editor-controls\">\n      <SelectionInfo />\n      <div className=\"control-buttons\">\n        <button\n          disabled={undoDisabled}\n          onClick={undo}\n        >\n          {t('undo')}\n        </button>\n        <button\n          disabled={redoDisabled}\n          onClick={redo}\n        >\n          {t('redo')}\n        </button>\n        <button\n          disabled={glyph.length === 0}\n          onClick={selectAll}\n        >\n          {t('select all')}\n        </button>\n        <button\n          disabled={glyph.length === 0}\n          onClick={selectDeselected}\n        >\n          {t('invert selection')}\n        </button>\n        <button\n          disabled={selection.length === 0}\n          onClick={copy}\n        >\n          {t('copy')}\n        </button>\n        <button\n          disabled={pasteDisabled}\n          onClick={paste}\n        >\n          {t('paste')}\n        </button>\n        <button\n          disabled={selection.length === 0}\n          onClick={cut}\n        >\n          {t('cut')}\n        </button>\n        <button\n          onClick={toggleFreehand}\n        >\n          {freehandMode ? t('end freehand') : t('start freehand')}\n        </button>\n        <button\n          disabled={decomposeDisabled}\n          onClick={decompose}\n        >\n          {t('decompose')}\n        </button>\n        <button\n          onClick={options}\n        >\n          {t('options')}\n        </button>\n      </div>\n      <div className=\"preview\">\n        <SubmitPreview />\n        <button onClick={finishEdit}>\n          {t('finish edit')}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default EditorControls;\n","import React, { useCallback } from 'react';\n\nimport './PartsList.css';\n\nconst getImageURL = (name: string) => (\n  `https://glyphwiki.org/glyph/${name}.50px.png`\n);\n\ninterface PartsListProps {\n  names: string[];\n  handleItemClick: (partName: string, evt: React.MouseEvent<HTMLImageElement>) => void;\n  handleItemMouseEnter: (partName: string, evt: React.MouseEvent<HTMLImageElement>) => void;\n  handleItemMouseLeave: (evt: React.MouseEvent<HTMLImageElement>) => void;\n}\n\nconst PartsList = (props: PartsListProps) => {\n  const { handleItemClick, handleItemMouseEnter, handleItemMouseLeave } = props;\n  const handleImageClick = useCallback((evt: React.MouseEvent<HTMLImageElement>) => {\n    const partName = evt.currentTarget.dataset.name!;\n    handleItemClick(partName, evt);\n  }, [handleItemClick]);\n  const handleImageMouseEnter = useCallback((evt: React.MouseEvent<HTMLImageElement>) => {\n    const partName = evt.currentTarget.dataset.name!;\n    handleItemMouseEnter(partName, evt);\n  }, [handleItemMouseEnter]);\n  const handleImageMouseLeave = useCallback((evt: React.MouseEvent<HTMLImageElement>) => {\n    handleItemMouseLeave(evt);\n  }, [handleItemMouseLeave]);\n\n  return (\n    <div className=\"parts-list\">\n      {props.names.map((name) => (\n        <img\n          key={name} alt={name} title={name}\n          data-name={name}\n          src={getImageURL(name)}\n          width={50} height={50}\n          loading=\"lazy\"\n          onClick={handleImageClick}\n          onMouseEnter={handleImageMouseEnter}\n          onMouseLeave={handleImageMouseLeave}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default PartsList;\n","import React, { useRef, useCallback, useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { useTranslation } from 'react-i18next';\n\nimport { editorActions } from '../actions/editor';\nimport { search } from '../callapi';\nimport args from '../args';\n\nimport PartsList from './PartsList';\n\nimport './PartsSearch.css';\n\nconst searchSuggestions = [\n  'エディタ部品1',\n  'エディタ部品2',\n  'エディタ部品3',\n  'エディタ部品4',\n];\n\nconst initialQuery = args.name || '';\n\nclass QueryTooShortError extends Error { }\n\ninterface SearchState {\n  query: string;\n  result: string[] | null;\n  err: any;\n}\n\nconst initialSearchState: SearchState = {\n  query: '',\n  result: [],\n  err: null,\n};\n\nconst PartsSearch = () => {\n  const queryInputRef = useRef<HTMLInputElement>(null);\n  const [searchState, setSearchState] = useState<SearchState>(initialSearchState);\n\n  const startSearch = (query: string) => {\n    setSearchState({\n      query,\n      result: null,\n      err: null,\n    });\n    search(query)\n      .then((result) => {\n        if (result === 'tooshort') {\n          throw new QueryTooShortError('query too short');\n        }\n        if (result === 'nodata') {\n          return [];\n        }\n        return result.split('\\t');\n      })\n      .then((names): SearchState => ({\n        query,\n        result: names,\n        err: null,\n      }))\n      .catch((reason): SearchState => ({\n        query,\n        result: null,\n        err: reason,\n      }))\n      .then((newSearchState) => {\n        setSearchState((currentSearchState) => (\n          (currentSearchState.query === query)\n            ? newSearchState\n            : currentSearchState // query has changed, discard result\n        ));\n      });\n  };\n\n  useEffect(() => {\n    if (initialQuery) {\n      startSearch(initialQuery);\n    }\n  }, []);\n  const handleSearch = useCallback(() => {\n    if (!queryInputRef.current) {\n      return;\n    }\n    const query = queryInputRef.current.value;\n    if (!query) {\n      setSearchState({\n        query,\n        result: [],\n        err: null,\n      });\n      return;\n    }\n    startSearch(query);\n  }, []);\n  const handleFormSubmit = useCallback((evt: React.FormEvent) => {\n    evt.preventDefault();\n    if (hoverNameRef.current) {\n      hoverNameRef.current.textContent = \"\\xa0\";\n    }\n    handleSearch();\n  }, [handleSearch]);\n\n  const hoverNameRef = useRef<HTMLDivElement>(null);\n  const handleItemMouseEnter = useCallback((partName: string) => {\n    if (!hoverNameRef.current) {\n      return;\n    }\n    hoverNameRef.current.textContent = partName;\n  }, []);\n  const handleItemMouseLeave = useCallback(() => {\n    if (!hoverNameRef.current) {\n      return;\n    }\n    hoverNameRef.current.textContent = \"\\xa0\";\n  }, []);\n  const dispatch = useDispatch();\n  const handleItemClick = useCallback((partName: string, evt: React.MouseEvent) => {\n    if (evt.shiftKey || evt.ctrlKey) {\n      if (!queryInputRef.current) {\n        return;\n      }\n      queryInputRef.current.value = partName;\n      startSearch(partName);\n    } else {\n      dispatch(editorActions.insertPart(partName));\n    }\n  }, [dispatch]);\n\n  const { t } = useTranslation();\n  return (\n    <div className=\"parts-search-area\">\n      <form className=\"parts-search-box\" onSubmit={handleFormSubmit}>\n        <input defaultValue={initialQuery} list=\"searchList\" ref={queryInputRef} />\n        <button>\n          {t('search')}\n        </button>\n        <datalist id=\"searchList\">\n          {searchSuggestions.map((suggestion, index) => (\n            <option key={index} value={suggestion} />\n          ))}\n        </datalist>\n      </form>\n      <div className=\"parts-list-area\">\n        {searchState.err\n          ? searchState.err instanceof QueryTooShortError\n            ? <div className=\"message\">{t('search query too short')}</div>\n            : <div className=\"message\">{t('search error', { message: searchState.err })}</div>\n          : !searchState.result\n            ? <div className=\"message\">{t('searching')}</div>\n            : searchState.result.length === 0\n              ? <div className=\"message\">{t('no search result')}</div>\n              : <PartsList\n                names={searchState.result}\n                handleItemClick={handleItemClick}\n                handleItemMouseEnter={handleItemMouseEnter}\n                handleItemMouseLeave={handleItemMouseLeave}\n              />}\n      </div>\n      <div className=\"parts-hover-name\" ref={hoverNameRef}>&nbsp;</div>\n    </div>\n  )\n};\n\nexport default PartsSearch;\n","import React, { useRef, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport args from '../args';\n\nimport { AppState } from '../reducers';\nimport { submitGlyphSelector } from '../selectors/submitGlyph';\nimport { unparseGlyph } from '../kageUtils/glyph';\n\n\nconst glyphName = args.name || 'sandbox';\n\nconst formAction = `${args.ssl ? 'https' : 'http'}://${args.host}/wiki/${encodeURIComponent(glyphName)}`;\n\nconst formStyle: React.CSSProperties = {\n  visibility: 'hidden',\n  position: 'absolute',\n};\n\nconst SubmitForm = () => {\n  const exitEvent = useSelector((state: AppState) => state.exitEvent);\n  const formRef = useRef<HTMLFormElement>(null);\n  useEffect(() => {\n    if (exitEvent) {\n      formRef.current?.submit();\n    }\n  }, [exitEvent]);\n  const glyph = useSelector(submitGlyphSelector);\n  return (\n    <form\n      style={formStyle}\n      ref={formRef}\n      action={formAction}\n      method=\"get\"\n    >\n      <input type=\"hidden\" name=\"page\" value={glyphName} />\n      <input type=\"hidden\" name=\"action\" value=\"preview\" />\n      <input type=\"hidden\" name=\"textbox\" value={unparseGlyph(glyph)} />\n      <input type=\"hidden\" name=\"related\" value={args.related} />\n      <input type=\"hidden\" name=\"summary\" value={args.summary} />\n      {args.edittime && <input type=\"hidden\" name=\"edittime\" value={args.edittime} />}\n    </form>\n  );\n};\n\nexport default SubmitForm;","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport GlyphArea from './components/GlyphArea';\nimport EditorControls from './components/EditorControls';\nimport PartsSearch from './components/PartsSearch'\nimport SubmitForm from './components/SubmitForm';\nimport OptionModal from './components/OptionModal';\n\nimport { AppState } from './reducers';\n\nimport { useShortcuts } from './shortcuts';\n\nimport './App.css';\nimport { useTranslation } from 'react-i18next';\n\nfunction App() {\n  const { i18n } = useTranslation();\n  const areaSelectRect = useSelector((state: AppState) => state.areaSelectRect);\n  const freehandStroke = useSelector((state: AppState) => state.freehandStroke);\n  useShortcuts();\n  return (\n    <div className={'App' + (areaSelectRect || freehandStroke ? ' background-dragging' : '')} lang={i18n.language}>\n      <GlyphArea />\n      <EditorControls />\n      <PartsSearch />\n      <SubmitForm />\n      <OptionModal />\n    </div>\n  );\n}\n\nexport default App;\n","import { useDispatch } from 'react-redux';\nimport { useHotkeys }from 'react-hotkeys-hook';\n\nimport { selectActions } from './actions/select';\nimport { editorActions } from './actions/editor';\nimport { undoActions } from './actions/undo';\n\nexport const useShortcuts = () => {\n  const dispatch = useDispatch();\n  useHotkeys('ctrl+a, command+a', (evt) => {\n    dispatch(selectActions.selectAll());\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+i, command+i', (evt) => {\n    dispatch(selectActions.selectDeselected());\n    evt.preventDefault();\n  }, {}, [dispatch]);\n\n  useHotkeys('ctrl+z, command+z', (evt) => {\n    dispatch(undoActions.undo());\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+y, command+y, ctrl+shift+z, command+shift+z', (evt) => {\n    dispatch(undoActions.redo());\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+x, command+x', (evt) => {\n    dispatch(editorActions.cut());\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+c, command+c', (evt) => {\n    dispatch(editorActions.copy());\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+v, command+v', (evt) => {\n    dispatch(editorActions.paste());\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('del', (evt) => {\n    dispatch(editorActions.delete());\n    evt.preventDefault();\n  }, {}, [dispatch]);\n\n  useHotkeys('esc', () => {\n    dispatch(editorActions.escape());\n  }, {}, [dispatch]);\n\n  useHotkeys('ctrl+h, left', (evt) => {\n    dispatch(editorActions.moveSelected([-1, 0]));\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+j, down', (evt) => {\n    dispatch(editorActions.moveSelected([0, 1]));\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+k, up', (evt) => {\n    dispatch(editorActions.moveSelected([0, -1]));\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+l, right', (evt) => {\n    dispatch(editorActions.moveSelected([1, 0]));\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+shift+h, shift+left', (evt) => {\n    dispatch(editorActions.moveSelected([-5, 0]));\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+shift+j, shift+down', (evt) => {\n    dispatch(editorActions.moveSelected([0, 5]));\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+shift+k, shift+up', (evt) => {\n    dispatch(editorActions.moveSelected([0, -5]));\n    evt.preventDefault();\n  }, {}, [dispatch]);\n  useHotkeys('ctrl+shift+l, shift+right', (evt) => {\n    dispatch(editorActions.moveSelected([5, 0]));\n    evt.preventDefault();\n  }, {}, [dispatch]);\n\n  useHotkeys('ctrl+s, command+s', (evt) => {\n    dispatch(editorActions.finishEdit(evt));\n    evt.preventDefault();\n  }, {}, [dispatch]);\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport args from \"./args\";\n\nimport jaTranslation from './locales/ja.json';\nimport enTranslation from './locales/en.json';\nimport koTranslation from './locales/ko.json';\nimport zhCNTranslation from './locales/zh_CN.json';\nimport zhTWTranslation from './locales/zh_TW.json';\n\nconst resources = {\n  \"ja\": {\n    translation: jaTranslation,\n  },\n  \"en\": {\n    translation: enTranslation,\n  },\n  \"ko\": {\n    translation: koTranslation,\n  },\n  \"zh-Hans\": {\n    translation: zhCNTranslation,\n  },\n  \"zh-Hant\": {\n    translation: zhTWTranslation,\n  },\n};\n\nlet lng = 'ja';\nswitch (args.host.split('.')[0]) {\n  case 'en':\n    lng = 'en';\n    break;\n  case 'ko':\n    lng = 'ko';\n    break;\n  case 'zhs':\n    lng = 'zh-Hans';\n    break;\n  case 'zht':\n    lng = 'zh-Hant';\n    break;\n}\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    resources,\n    lng,\n    fallbackLng: {\n      'zh-Hans': ['zh-Hant', 'ja'],\n      'zh-Hant': ['zh-Hans', 'ja'],\n      'default': ['ja'],\n    },\n\n    returnObjects: true,\n    interpolation: {\n      escapeValue: false, // react already safes from xss\n    },\n  });\n\nexport default i18n;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\n\nimport store from './store';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './i18n';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}